<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git | NullSpace</title>
    <link>https://spacetimelab.cn/tag/git/</link>
      <atom:link href="https://spacetimelab.cn/tag/git/index.xml" rel="self" type="application/rss+xml" />
    <description>Git</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 25 Apr 2022 09:32:03 +0800</lastBuildDate>
    <image>
      <url>https://spacetimelab.cn/media/icon_hue03491371183284312b8b116a73ae5ab_79511_512x512_fill_lanczos_center_3.png</url>
      <title>Git</title>
      <link>https://spacetimelab.cn/tag/git/</link>
    </image>
    
    <item>
      <title>如何为Git Commit进行备注？</title>
      <link>https://spacetimelab.cn/post/how-to-write-memo-for-explaining-your-commit/</link>
      <pubDate>Mon, 25 Apr 2022 09:32:03 +0800</pubDate>
      <guid>https://spacetimelab.cn/post/how-to-write-memo-for-explaining-your-commit/</guid>
      <description>&lt;h2 id=&#34;0x00-前言&#34;&gt;0x00 前言&lt;/h2&gt;
&lt;p&gt;无论是个人开发还是团队开发，我们都很有可能用到版本管理工具如git、svn等，使用它们我们可以针对每次提交的代码进行备注，以便日后追溯或查看时容易理解当时变更代码的目的。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git commit -m &amp;#34;进行了代码变更&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;相比于个人以随心所欲的方式去备注自己的每一次提交，我们希望项目开发者以一种规范的备注风格让项目成员能够更方便地理解代码变更。&lt;/p&gt;
&lt;h2 id=&#34;0x01-提交备注的规范&#34;&gt;0x01 提交备注的规范&lt;/h2&gt;
&lt;p&gt;提交备注（Commit Message）可以分文三个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Header&lt;/p&gt;
&lt;p&gt;备注的标题行，描述主要变更内容&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Body&lt;/p&gt;
&lt;p&gt;主体内容，以更详细的文本说明变更目的、方法、风险等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Footer&lt;/p&gt;
&lt;p&gt;尾部内容，附带可能需要新创建或者关闭的issue的链接&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中Body和Footer往往可以省略，Header部分则是必需。&lt;/p&gt;
&lt;p&gt;提交备注的Header部分又可以分为type、scope、subject三个部分。&lt;/p&gt;
&lt;h5 id=&#34;1-type&#34;&gt;(1) type&lt;/h5&gt;
&lt;p&gt;用于说明提交的类别，是必需部分。可以用如下关键字标识提交类别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;feat: 新功能(feature)&lt;/li&gt;
&lt;li&gt;fix: 修复(bug)&lt;/li&gt;
&lt;li&gt;docs: 文档(document)&lt;/li&gt;
&lt;li&gt;style: 格式（不影响代码运行的变动）&lt;/li&gt;
&lt;li&gt;refactor: 重构（既不是新增功能，也不是修复bug的改动）&lt;/li&gt;
&lt;li&gt;test: 增加测试（单元测试、业务测试）&lt;/li&gt;
&lt;li&gt;chore: 构建过程或辅助工具的变动&lt;/li&gt;
&lt;li&gt;perf: 性能优化相关变动&lt;/li&gt;
&lt;li&gt;revert: 代码回滚到上一个版本&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;type的标识会影响change log的内容。&lt;/p&gt;
&lt;h5 id=&#34;2-scope&#34;&gt;(2) scope&lt;/h5&gt;
&lt;p&gt;用于说明提交影响的范围，如数据层(DAO)、控制层(Controller)、视图层(View)&lt;/p&gt;
&lt;h5 id=&#34;3-subject&#34;&gt;(3) subject&lt;/h5&gt;
&lt;p&gt;对提交目的进行简短描述。&lt;/p&gt;
&lt;p&gt;编写subject时以动词开头、首字母小写且结尾无句号&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;p&gt;本文感谢以下作者/团队的分享：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;阮一峰：&lt;a href=&#34;https://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Commit message 和 Change log 编写指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;阿里开发者: &lt;a href=&#34;https://zhuanlan.zhihu.com/p/182553920&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;如何规范你的Git commit？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;feflow&lt;a href=&#34;https://feflowjs.com/zh/guide/rule-git-commit.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git Commit 规范&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
