<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1 | CoolCats</title>
    <link>https://coolgiserz.github.io/publication-type/1/</link>
      <atom:link href="https://coolgiserz.github.io/publication-type/1/index.xml" rel="self" type="application/rss+xml" />
    <description>1</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© CoolCats</copyright><lastBuildDate>Mon, 28 Dec 2020 10:01:58 +0800</lastBuildDate>
    <image>
      <url>https://coolgiserz.github.io/images/icon_hue03491371183284312b8b116a73ae5ab_79511_512x512_fill_lanczos_center_2.png</url>
      <title>1</title>
      <link>https://coolgiserz.github.io/publication-type/1/</link>
    </image>
    
    <item>
      <title>「论文阅读」-STGCN：面向交通流预测的深度学习框架</title>
      <link>https://coolgiserz.github.io/publication/stgcn-deep-learning-framework-for-traffic-forecasting/</link>
      <pubDate>Mon, 28 Dec 2020 10:01:58 +0800</pubDate>
      <guid>https://coolgiserz.github.io/publication/stgcn-deep-learning-framework-for-traffic-forecasting/</guid>
      <description>&lt;h2 id=&#34;文章分析&#34;&gt;文章分析&lt;/h2&gt;
&lt;h3 id=&#34;引言&#34;&gt;引言&lt;/h3&gt;
&lt;p&gt;为了充分利用空间特征，一些研究者使用卷积神经网络（CNN）来捕捉交通网络之间的相邻关系，同时在时间轴上采用循环神经网络（RNN）。通过结合长短期记忆（LSTM）网络[Hochreiter和Schmidhuber，1997]和一维CNN，Wu和Tan[2016]提出了一种用于短期交通预测的特征级融合架构CLTFP。虽然采用了简单明了的策略，但CLTFP还是首次尝试将空间和时间规律性统一起来。之后，Shi等人[2015]提出了卷积LSTM，它是一种扩展的全连接LSTM（FC-LSTM），内嵌卷积层。但是，应用的普通卷积操作限制了模型只能处理网格结构（如图像、视频），而不是一般的域。同时，用于序列学习的递归网络需要进行迭代训练，这就引入了分步的误差积累。此外，基于RNN的网络（包括LSTM）通常被认为难以训练且计算量大。&lt;/p&gt;
&lt;p&gt;为了克服这些问题，我们引入了几种策略来有效地模拟交通流的时间动态和空间依赖性。为了充分利用空间信息，我们用一个总图来模拟交通网络，而不是单独处理（如网格或段）。为了处理循环网络的固有缺陷，我们在时间轴上采用了完全卷积结构。最重要的是，我们提出了一种新型的深度学习架构，即时空图卷积网络，用于交通预测任务。该架构由多个时空卷积块组成，它是图卷积层[Defferrard et al.，2016]和卷积序列学习层的组合，以模拟空间和时间上的依赖关系。据我们所知，这是第一次在交通研究中应用纯卷积结构从图结构的时间序列中同时提取时空特征。我们在两个真实世界的交通数据集上评估了我们提出的模型。实验表明，我们的框架在多种预设预测长度和网络规模的预测任务中优于现有的基线。&lt;/p&gt;
&lt;h3 id=&#34;方法&#34;&gt;方法&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;images/fig1.png&#34; alt=&#34;fig1&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;网络架构&#34;&gt;网络架构&lt;/h4&gt;
&lt;p&gt;在本节中，我们将详细介绍所提出的时空图卷积网络（STGCN）的架构。如图2所示，STGCN由多个时空卷积块组成，每个时空卷积块组成一个 &amp;ldquo;三明治 &amp;ldquo;结构，其中有两个门控顺序卷积层，中间有一个空间图卷积层。各个模块的细节介绍如下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/fig2.png&#34; alt=&#34;fig2&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;基于图cnn提取空间特征&#34;&gt;基于图CNN提取空间特征&lt;/h5&gt;
&lt;p&gt;交通网一般以图的结构来组织。将道路网作为图形进行数学表述是自然和合理的。然而，以往的研究忽视了交通网的空间属性：由于交通网被分割成多个片段或网格，因此忽略了交通网的连通性和全局性。即使在网格上进行二维卷积，由于数据建模的妥协，也只能大致捕捉到空间的局部性。 因此，在我们的模型中，图卷积被直接运用在图结构数据上，以提取空间域中有意义的模式和特征。虽然在图卷积中，由式(2)计算内核Θ可能是昂贵的，由于O(n2)乘法与图傅里叶基础，两个近似策略被应用来克服这个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;切比雪夫多项式近似（Chebyshev Polynomials Approximation）&lt;/li&gt;
&lt;li&gt;一阶近似（$1^{st}$-order Approximation）&lt;/li&gt;
&lt;li&gt;图卷积的推广&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;用于提取时间特征的门控-cnns&#34;&gt;用于提取时间特征的门控 CNNs&lt;/h5&gt;
&lt;p&gt;虽然基于RNN的模型在时间序列分析中变得广泛，但用于交通预测的循环网络仍然存在着耗时的迭代、复杂的门机制和对动态变化的缓慢响应的问题。而CNN具有训练速度快、结构简单、与前几步无依赖性约束等优点。受[Gehring等，2017]的启发，我们在时间轴上采用整个卷积结构来捕捉交通流的时间动态行为。这种特殊的设计通过多层卷积结构形成的分层表示，可以实现并行和可控的训练过程。&lt;/p&gt;
&lt;h5 id=&#34;时空卷积模块&#34;&gt;时空卷积模块&lt;/h5&gt;
&lt;p&gt;为了融合来自空间和时间域的特征，构建了时空卷积块（ST-Conv block）来联合处理图结构的时间序列。块本身可以根据特定情况的规模和复杂性进行堆叠或扩展。
如图2（中）所示，中间的空间层是为了衔接两个时间层，可以实现图卷积通过时间卷积的快速空间状态传播。同时，&amp;ldquo;三明治 &amp;ldquo;结构也有助于网络充分应用瓶颈策略，通过图卷积层对通道C进行降频和升频，实现规模压缩和特征挤压。此外，在每个ST-Conv块内都利用层归一化来防止过拟合。&lt;/p&gt;
&lt;p&gt;现在我们将我们的模型STGCN的主要特点总结如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;STGCN是一个处理结构化时间序列的通用框架。它不仅能够解决交通网络建模和预测问题，而且能够应用于更普遍的时空序列学习任务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;时空块结合了图形卷积和门控时空卷积，可以提取最有用的空间特征，并连贯地捕捉最本质的时空特征。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;该模型完全由卷积结构组成，因此以较少的参数和较快的训练速度实现了对输入的并行化。更重要的是，这种经济的架构使得该模型可以更高效地处理大规模网络。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;实验&#34;&gt;实验&lt;/h3&gt;
&lt;h4 id=&#34;数据集描述&#34;&gt;数据集描述&lt;/h4&gt;
&lt;p&gt;我们在两个真实世界的交通数据集上验证我们的模型，BJER4和PeMSD7，分别由北京市交通委员会和加州交通部收集。每个数据集都包含了交通观测的关键属性和地理信息，并有相应的时间戳，具体如下。&lt;/p&gt;
&lt;h5 id=&#34;bjer4&#34;&gt;BJER4&lt;/h5&gt;
&lt;p&gt;BJER4是通过双环检测仪采集北京市东环4号线路的主要区域。我们的实验共选取了12条道路。每5分钟汇总一次交通数据。所用时间段为2014年7月1日至8月31日，周末除外。我们选择第一个月的历史车速记录作为训练集，其余分别作为验证集和测试集。&lt;/p&gt;
&lt;h5 id=&#34;pemsd7&#34;&gt;PeMSD7&lt;/h5&gt;
&lt;p&gt;PeMSD7是由加州交通局的性能监测系统(PeMS)收集的，该系统由部署在加州公路系统主要城市地区的39,000多个传感器站实时收集[Chen等，2001]。数据集也由30秒的数据样本汇总成5分钟的时间间隔。我们在加州第7区中随机选取一个中等规模和一个大规模，分别包含228个和1026个站点，分别标注为PeMSD7(M)和PeMSD7(L)，作为数据源(如图3左侧所示)。PeMSD7数据集的时间范围为2012年5月和6月的工作日。我们基于上述相同的原则，将训练集和测试集进行拆分。
&lt;img src=&#34;images/fig3.png&#34; alt=&#34;fig3&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;数据预处理&#34;&gt;数据预处理&lt;/h4&gt;
&lt;p&gt;两个数据集的标准时间间隔设置为5分钟。因此，道路图的每个节点每天包含288个数据点。在数据清洗后，采用线性插值法填补缺失值。另外，输入的数据采用Z-Score法进行归一化处理。&lt;/p&gt;
&lt;p&gt;在BJER4中，通过传感器站的部署图，构建了北京东四环路系统的道路图拓扑结构。通过整理每条道路的隶属关系、方向和起止点，可以将环线系统数字化为有向图。&lt;/p&gt;
&lt;p&gt;在PeMSD7中，道路图的邻接矩阵是根据交通网中各站点之间的距离来计算的。加权邻接矩阵W可以形成为：
&lt;img src=&#34;images/equation10.png&#34; alt=&#34;eq10&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;实验设置&#34;&gt;实验设置&lt;/h4&gt;
&lt;p&gt;所有的实验都是在Linux集群上编译和测试的（CPU: Intel(R) Xeon(R) CPU E5-2620 v4 @ 2.10GHz, GPU: NVIDIA GeForce GTX 1080）) 为了消除非典型交通，我们的经验中只采用工作日的交通数据[Li et al.] 我们执行网格搜索策略来定位验证上的最佳参数。所有的测试都采用60分钟作为历史时间窗口，也就是12个观察到的数据点（M=12）来预测未来15、30、45分钟的交通状况（H=3、6、9）。&lt;/p&gt;
&lt;h4 id=&#34;实验结果&#34;&gt;实验结果&lt;/h4&gt;
&lt;p&gt;表1和表2展示了STGCN和基线在数据集BJER4和PeMSD7（M/L）上的结果。我们提出的模型在三个评价指标中都取得了具有统计学意义的最佳性能（双尾T检验，α=0.01，P&amp;lt;0.01）。我们可以很容易地观察到，传统的统计和机器学习方法在短期预测中可能表现良好，但由于误差积累、记忆问题和空间信息的缺失，其长期预测并不准确。ARIMA模型由于无法处理复杂的时空数据而表现最差。深度学习方法普遍取得了比传统机器学习模型更好的预测结果。
&lt;img src=&#34;images/table1.png&#34; alt=&#34;table1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/table2.png&#34; alt=&#34;table2&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;空间拓扑的好处&#34;&gt;空间拓扑的好处&lt;/h5&gt;
&lt;p&gt;以往的方法没有结合空间拓扑结构，对时间序列进行粗粒度建模。不同的是，通过对传感器的空间拓扑建模，我们的模型STGCN在短期和中长期预报上取得了显著的提高。在数据集PeMSD7上，STGCN的优势比BJER4更加明显，因为PeMS的传感器网络更加复杂，结构更加复杂(如图3所示)，我们的模型可以有效地利用空间结构进行更准确的预测。为了比较三种基于图卷积的方法。GCGRU、STGCN(Cheb)和STGCN(1st)三种方法，我们展示了它们在早晚高峰时段的预测结果，如图4所示。很容易观察到，我们提出的STGCN比其他方法更准确地捕捉到了高峰时段的趋势；而且它比其他方法更早地检测到了高峰时段的结束。我们的模型由于高效的图卷积和堆叠的时间卷积结构，能够快速响应交通网络之间的动态变化，而不像大多数循环网络那样过度依赖历史平均值。
&lt;img src=&#34;images/fig5.png&#34; alt=&#34;fig5&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;训练效率和泛化性&#34;&gt;训练效率和泛化性&lt;/h5&gt;
&lt;p&gt;为了看到我们提出的沿时间轴卷积的好处，我们在表3中总结了STGCN和GCGRU的训练时间对比。在公平性方面，GCGRU由三层组成，分别在实验中为PeMSD7(M)提供64、64、128个单元，STGCN使用了4.3节所述的默认设置。我们的模型STGCN只消耗了272秒，而RNN型的模型GCGRU在PeMSD7(M)上花费了3824秒。这种14倍的训练速度的加快主要得益于应用了时间卷积而不是递归结构，可以实现完全并行训练，而不是像RNN那样完全依靠链式结构。对于PeMSD7(L)来说，由于GCGRU的GPU消耗超过了单卡的内存容量，因此不得不使用一半的批处理量(结果在表2中标为 &amp;ldquo;*&amp;quot;);而STGCN只需要将ST-Conv块中间的通道增加一倍。
&lt;img src=&#34;images/table3.png&#34; alt=&#34;table3&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;相关工作&#34;&gt;相关工作&lt;/h3&gt;
&lt;p&gt;最近有一些深度学习研究也是以图卷积在时空任务中的应用为动机。Seo等人[2016]引入了图卷积循环网络（GCRN），从结构化的数据序列中共同识别空间结构和动态变化。本研究的关键挑战是确定特定环境下循环网络和图卷积的最佳组合。基于上述原理，Li等人[2018]成功地采用门控递归单元（GRU）与图卷积进行长期交通预测。与这些工作相比，我们的模型完全由卷积结构建立起来；ST-Conv块是专门为统一处理结构化数据而设计的，内部有残差连接和瓶颈策略；我们的模型中也采用了更高效的图卷积核。&lt;/p&gt;
&lt;h3 id=&#34;结论&#34;&gt;结论&lt;/h3&gt;
&lt;p&gt;在本文中，我们提出了一种新型的深度学习框架STGCN用于交通预测，通过时空卷积块整合图卷积和门控时空卷积。实验表明，我们的模型在两个真实世界的数据集上的表现优于其他最先进的方法，表明其在从输入中探索时空结构上的巨大潜力。它还实现了更快的训练，更容易收敛，更少的参数，灵活的灵活性和可扩展性。这些特点对于学术发展和大规模的行业部署都是相当有前景和实用的。在未来，我们将进一步优化网络工作结构和参数设置。此外，我们提出的框架还可以应用到更多的时空结构化序列预测场景中，如社交网络的演化、推荐系统的偏好预测等。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>「论文阅读」—GMAN: 一种用于交通预测的图多注意力网络</title>
      <link>https://coolgiserz.github.io/publication/gman-a-graph-multi-attention-network-for-traffic-prediction/</link>
      <pubDate>Wed, 23 Dec 2020 11:25:09 +0800</pubDate>
      <guid>https://coolgiserz.github.io/publication/gman-a-graph-multi-attention-network-for-traffic-prediction/</guid>
      <description></description>
    </item>
    
    <item>
      <title>「论文阅读」-学习用于通勤流嵌入的地理上下文嵌入</title>
      <link>https://coolgiserz.github.io/publication/learning-geo-embeding-for-commute-flow-prediction/</link>
      <pubDate>Wed, 09 Dec 2020 20:18:23 +0800</pubDate>
      <guid>https://coolgiserz.github.io/publication/learning-geo-embeding-for-commute-flow-prediction/</guid>
      <description>&lt;h1 id=&#34;learning-geo-contextual-embeddings-for-commuting-flow-prediction&#34;&gt;Learning Geo-Contextual Embeddings for Commuting Flow Prediction&lt;/h1&gt;
&lt;h2 id=&#34;0x00-引言&#34;&gt;0x00 引言&lt;/h2&gt;
&lt;p&gt;本文章题为“用于&lt;strong&gt;通勤流&lt;/strong&gt;预测的&lt;strong&gt;地理上下文嵌入&lt;/strong&gt;学习”。&lt;/p&gt;
&lt;p&gt;关键几个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;什么是通勤流？&lt;/li&gt;
&lt;li&gt;什么是地理上下文？&lt;/li&gt;
&lt;li&gt;如何对地理上下文信息进行嵌入学习？&lt;/li&gt;
&lt;li&gt;该方法工作效果如何？存在什么缺陷吗？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;通勤流&#34;&gt;通勤流&lt;/h3&gt;
&lt;h4 id=&#34;什么是通勤流&#34;&gt;什么是通勤流？&lt;/h4&gt;
&lt;p&gt;通勤是一种从家到工作地的往返过程。日复一日的通勤行为形成了一个与社会经济因素密切关联的复杂网络。&lt;/p&gt;
&lt;p&gt;通勤流也被看作城市规划中的一个基本问题，因为其揭示了城市中劳动力供给与需求之间的空间关系。所以从城市规划的角度来看，有必要研究基础设施和土地利用对通勤流的影响。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/network.png&#34; alt=&#34;通勤网络&#34;&gt;&lt;/p&gt;
&lt;center&gt;通勤流&lt;/center&gt;
&lt;h4 id=&#34;通勤流预测与交通流预测有何区别&#34;&gt;通勤流预测与交通流预测有何区别？&lt;/h4&gt;
&lt;p&gt;说的通勤流预测可能又容易联想到交通流预测，两者有什么区别呢？&lt;/p&gt;
&lt;p&gt;交通流预测是一个时序预测问题，在技术实现上需要将历史轨迹信息作为输入特征；而通勤流预测旨在揭示城市中劳动力供给侧与需求侧之间的空间关系，通常是只用节点属性信息（基建、土地利用）预测的是边级别的信号（如通勤流的大小）。&lt;/p&gt;
&lt;h2 id=&#34;0x01-相关工作&#34;&gt;0x01 相关工作&lt;/h2&gt;
&lt;h3 id=&#34;通勤流相关工作&#34;&gt;通勤流相关工作&lt;/h3&gt;
&lt;p&gt;针对通勤流预测问题，人们以前有用重力模型、非参数模型、介入机会模型。&lt;/p&gt;
&lt;p&gt;然而：&lt;/p&gt;
&lt;p&gt;(1) 重力模型只是简单地将物理定律搬过来，实际上不能很好地刻画复杂的通勤模式，应用效果不理想。&lt;/p&gt;
&lt;p&gt;(2) 现有的大多数机器学习模型只用OD点的节点属性特征，忽略了区域之间的空间依赖性&lt;/p&gt;
&lt;p&gt;介入机会模型倒是考虑了出发地、目的地周边对中心的影响，本文提出的地理上下文嵌入便受到这类方法的启发。&lt;/p&gt;
&lt;h3 id=&#34;图表征相关工作&#34;&gt;图表征相关工作&lt;/h3&gt;
&lt;p&gt;图表征学习方面也有很多利用节点属性、节点邻域信息的方法，本文方法主要受GAT的影响，将自注意力机制引入到通勤流预测上，捕获地理上下文信息。&lt;/p&gt;
&lt;h2 id=&#34;0x02-本文观点&#34;&gt;0x02 本文观点&lt;/h2&gt;
&lt;p&gt;至此本文方法的基本框架已经出来了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;针对通勤网络&lt;/li&gt;
&lt;li&gt;通过地理上下文嵌入学习地理单元及其上下文信息，通过多任务预测损失函数约束嵌入向量中的信息更适合进行通勤流预测。所谓的地理上下文信息就是指地理单元周围的POI、土地利用等信息，抽象来说就是邻域节点的属性。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;images/gmel.png&#34; alt=&#34;GMEL&#34;&gt;&lt;center&gt;GMEL&lt;/center&gt;&lt;/p&gt;
&lt;h3 id=&#34;用gat将地理上下文信息编码到嵌入空间中&#34;&gt;用GAT将地理上下文信息编码到嵌入空间中&lt;/h3&gt;
&lt;p&gt;这里要注意的是文章提出用2个GAT分别建模出发地和目的地的特征，即要把劳动供给侧和需求侧的特征进行解耦。&lt;/p&gt;
&lt;p&gt;然后通过多任务学习框架约束嵌入向量更适应于流预测表示。&lt;/p&gt;
&lt;h3 id=&#34;通过多任务学习框架约束嵌入向量更适应于通勤流预测&#34;&gt;通过多任务学习框架约束嵌入向量更适应于通勤流预测&lt;/h3&gt;
&lt;p&gt;主任务自然是通勤流预测，子任务是预测两个地理单元（出发地和目的地）的流入/流出量，这背后的直觉是通勤流与地理单元的流入/流出量之间高度相关，引入这两个子任务可以约束嵌入向量包含更多有助于通勤流预测的信息（监督信号）。&lt;/p&gt;
&lt;h3 id=&#34;基于gmel和多任务学习框架的通勤流预测&#34;&gt;基于GMEL和多任务学习框架的通勤流预测&lt;/h3&gt;
&lt;p&gt;前面基于GMEL可以获得地理单元的嵌入向量，基于这些向量在训练一个回归学习器（如梯度提升树、随机森林）便能进行通勤流预测。算法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;端到端地训练一个GMEL（预训练过程）&lt;/li&gt;
&lt;li&gt;基于嵌入向量再训练一个流预测模型&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;images/algo.png&#34; alt=&#34;GMEL&#34;&gt;&lt;/p&gt;
&lt;center&gt;训练算法&lt;/center&gt;
&lt;h2 id=&#34;0x03-实验&#34;&gt;0x03 实验&lt;/h2&gt;
&lt;p&gt;实验部分需要验证的点包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;地理上下文信息是否真的有助于通勤流预测？&lt;/li&gt;
&lt;li&gt;使用两个GAT分别建模供给特征和需求特征是多此一举吗？&lt;/li&gt;
&lt;li&gt;有必要引入多任务学习框架吗？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;实验环境&#34;&gt;实验环境&lt;/h3&gt;
&lt;p&gt;用到了&lt;a href=&#34;https://lehd.ces.census.gov/data/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;通勤流&lt;/a&gt;、&lt;a href=&#34;https://www1.nyc.gov/site/planning/data-maps/open-data/dwn-pluto-mappluto.page&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;土地利用&lt;/a&gt;的数据集和距离计算的包。&lt;/p&gt;
&lt;h3 id=&#34;实验结果&#34;&gt;实验结果&lt;/h3&gt;
&lt;p&gt;观察实验结果可发现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有GMEL系列的模型都比基准模型要好，表明地理上下文信息有助于通勤流来说&lt;/li&gt;
&lt;li&gt;标准的GMEL比另外两个变种表现好，验证了多任务学习框架的有效性和对供需特征解耦的必要性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;images/test_set.png&#34; alt=&#34;测试集&#34;&gt;&lt;/p&gt;
&lt;center&gt;测试表现&lt;/center&gt;
&lt;p&gt;参数敏感性分析 、残差分析也表明方法的鲁棒性。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/residual.png&#34; alt=&#34;残差&#34;&gt;&lt;/p&gt;
&lt;center&gt;残差分析&lt;/center&gt;
&lt;h2 id=&#34;0x04-结论&#34;&gt;0x04 结论&lt;/h2&gt;
&lt;p&gt;总结全文，文章提出利用地理上下文信息预测通勤流，并提出一个嵌入学习框架来学习地理单元的上下文信息，结果表明引入这种信息是有助于通勤流预测的。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
