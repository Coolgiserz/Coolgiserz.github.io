[{"authors":null,"categories":null,"content":"爱好金庸小说的程序员\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://coolgiserz.github.io/author/coolcats/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/coolcats/","section":"authors","summary":"爱好金庸小说的程序员","tags":null,"title":"CoolCats","type":"authors"},{"authors":["吳恩達"],"categories":null,"content":"吳恩達 is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"da99cb196019cc5857b9b3e950397ca9","permalink":"https://coolgiserz.github.io/author/%E5%90%B3%E6%81%A9%E9%81%94/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E5%90%B3%E6%81%A9%E9%81%94/","section":"authors","summary":"吳恩達 is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.","tags":null,"title":"吳恩達","type":"authors"},{"authors":["CoolCats"],"categories":["论文阅读"],"content":"Free and open source GIS in South America: political inroads and local advocacy 文章讨论了开源GIS，分析了南美洲自由开源GIS的发展及由来，重点讨论了政治上及地方性的支持对于南美洲开源GIS发展的积极推动作用。整篇文章相对而言技术性偏弱，侧重调查及讨论分析，但将南美洲各地开源GIS的发展历程呈现出来给读者，也有助于GIS社区对GIS技术发展趋势进行更深入的思考。\n本文做了什么工作？ 回顾了南美洲对于自由开源地理信息系统（FOSS）的吸收与宣传，特别是FOSS与南美洲各区域对其的友好政治氛围的关系：\n 国家层面对FOSS GIS的接纳程度 围绕开源GIS技术支持和软件开发而进行的地方性的努力 分析了自由开源GIS技术社区的三个卓有成效的案例  0x00 背景介绍 什么是自由与开源软件？ FOSS一词指的是其许可证符合自由软件基金会列出的四项基本自由的软件：\n 按照自己的意愿运行程序的自由； 研究和修改程序的自由； 重新分发副本的自由； 分发自己修改版本的自由  关于GIS软件市场 流行的自由开源GIS软件有哪些？  桌面式制图与数据处理: QGIS、GRASS、gvSIG、SAGA 网络地图发布: MapServer、GeoServer 网站编程: Leaflet、OpenLayers 后端数据处理: PostreSQL、PostGIS  流行的商用GIS软件有哪些？ ArcGIS、MapInfo、Manifold GIS\n为什么要关注南美洲的开源GIS软件？ 主要有两个原因：\n 南美洲有很多政府部门采用FOSS GIS 无论是从政治上还是从地方性运动来看，南美洲地区对于FOSS GIS的态度北半球地区具有明显差异  0x01 南美洲政府对于FOSS的接纳程度 助攻1: 鼓励在政府计算机中使用自由与开源软件 南美洲的市、州和联邦各级都有各种独特的法律和法令，促进在政府计算机上使用自由和开放源码软件。这包括至少五项国家一级的政策(图1)，这一比例高于其他任何洲。 图1 南美洲国家政府对于FOSS的政策法令 助攻2: 鼓励在政府公务中使用FOSS 除了鼓励FOSS之外，有些政府甚至规定在国家公务中使用FOSS。例如，委内瑞拉的 \u0026ldquo;Infogobierno \u0026ldquo;法律要求公共机构的技术架构向FOSS迁移，玻利维亚颁布了一系列法令，引导公共部门向FOSS迁移。\n与世界上其他地区相比，采用FOSS的严格规定的趋势在拉丁美洲和非洲更为普遍。其他地区的政策更多地发挥不干涉的咨询作用。\n问题：为什么南美洲政府会对自由开源软件如此追捧？ 技术因素 在发展中国家当中，如南美洲的许多国家盛行盗版软件，导致其对专有软件的需求得到满足，但这实际上促进了供应商对这些地区的技术封锁。近年来，政府对盗版软件的打击导致公共机构寻找成本较低的软件替代品。其中一些人转向了自由和开源软件，认为它们不仅可以节约成本，还可以培养当地人的技能，发展特定的应用，并实现社会变革。\n除了像GIS这样的专业软件外，政府采用的FOSS还包括操作系统、网络服务器、数据库和办公软件，如文字处理机和电子表格管理程序。有学者认为自由和开放源码软件许可证的性质允许任何人对这些程序的源代码进行审计和检查，从而建立了一道防止黑客和外国破坏的防线（Oram，2011）。这些许可证还允许对代码进行修改和再分发，提供了一种修复、增强或国产化软件的方法，而无需等待供应商发布（可能代价高昂的）升级。\n经济因素  减少专用软件许可费和盗版软件罚款项的支出  自由和开源软件对公共部门的一个吸引力因素是：软件可以在免许可费的情况下进行分发。以往政府办公室维持专有软件运行所需的资金数额很大。例如，一位巴西官员估计，在1999年到2004年之间，巴西支付了10亿美元的软件许可费和版税，而且每年需要20亿美元起才能付清由其雇员使用盗版软件所导致的罚款。巴西联邦数据处理服务机构SERPRO报告说，2003-2008年卢拉政府执政初期，巴西通过在公共部门的计算机上采用自由和开源软件，节省了3.8亿雷亚尔(约合1.6亿美元)。\n 长期维护成本较低  虽然节省的软件许可证费用可能被视为自由和开放源码软件的决定性好处，但也必须考虑到总体拥有成本(TCO)。这包括迁移到新的软件，培训使用它的员工，以及长期维护系统（Shaikh和Cornford，2012）。Ghosh(2003年)认为，在经济发展国家，自由和开放源码软件的优势更加明显，因为与发达国家相比，劳动力成本在总拥有成本中所占比例较小。\n社会因素 南美洲政府促进自由和开放源码软件的原因不仅仅是经济问题，还涉及到对社会、主权和国家作用的态度。\n微软秘鲁公司与立法者Edgar Villanueva就一项拟议的法案(后来被大大削弱)进行的公开辩论就说明了这一点，该法案将要求秘鲁政府的计算机使用自由和开源软件。微软警告说，这项规定将导致过高的迁移成本、平台不匹配和生产力降低。Villanueva和自由软件的倡导者反驳说，自由和开源软件是国家保证公民能够获得公共信息的唯一途径，包括存储和保护个人记录的代码（Chan 2004）。\nChan(2004)指出，这种推理方式与北美的FOSS推广有一个关键的区别，北美的支持者往往强调FOSS对消费者自由的保护。设在南美洲的自由和开源软件倡导者帮助Villanueva起草了答复，他们的论点是保护集体社会权利。一位参与辩论的阿根廷自由和开源软件倡导者说：\u0026ldquo;成本是重要的，但它只是次要的。当我们开始思考存储公民个人数据的政府系统中可能存在的不安全因素，以及处理这些数据的方式时，作为一个公民，我关心系统是如何保护这些数据的\u0026rdquo;（引自Chan 2007）。\n政治因素 在南美洲，从自由软件倡导者的言论一直到国家元首的演讲可以看出，社会各阶层都出现了将自由和开源软件作为摆脱以美国为基础的专有软件公司垄断地位的独立途径的想法。Zanotti(2014)引用一位阿根廷黑客的话说。\u0026ldquo;如果我们谈论自由和开源软件，我们最终会谈论政治。我们不会谈论编程\u0026rdquo;。\n 将FOSS作为摆脱美国公司垄断的途径  南美洲对自由和开源软件最有力的支持政策是在2000年代初所谓的 \u0026ldquo;粉红潮 \u0026ldquo;时期，当时有一大批有号召力的左倾领导人上台，承诺挑战该地区的新自由主义霸权。作为该议程的一部分，他们热衷于推广自由软件，以替代美国制造的专有软件。2007年4月，当时的厄瓜多尔总统Rafael Correa甚至在电视上宣称，公开采用自由和开放源码软件是\u0026rsquo;拉丁美洲迈向一体化的重要步伐，或者说是走向解放的重要一步\u0026rsquo;。\n 将自由和开源软件与社会主义理论联系起来  玻利维亚所有与自由和开源软件有关的政策都是在埃沃-莫拉莱斯的领导下出台的，目的是为了打破技术和信息依赖的束缚，保证技术主权。在委内瑞拉，乌戈-查韦斯一再将自由和开放源码软件与社会主义理论联系起来，并使用 \u0026ldquo;自由\u0026rdquo;、\u0026ldquo;平等 \u0026ldquo;和 \u0026ldquo;独立 \u0026ldquo;等词语来宣传它。在委内瑞拉，Hugo Chávez一再将自由和开源软件与社会主义理论联系起来，并使用 \u0026ldquo;自由\u0026rdquo;、\u0026ldquo;平等 \u0026ldquo;和 \u0026ldquo;独立 \u0026ldquo;等词语来宣传。以这种方式将自由和开放源码软件政治化，有时很难说服那些不同意查韦斯革命的人进行软件迁移，但从政策的角度来看，它成为了该地区最严格的自由和开源软件授权法案之一。\n0x02 南美洲的FOSS GIS：推动力与主张 最早关于地理信息系统和社会的一些讨论提出了关于软件成本及其对可访问性的影响的警告(Sheppard 1995, Harris and Weiner 1996)。 在大多数自由和开放源码软件开发之前，Yapa(1991年)说，商业地理信息系统的高价位使发展中国家的学生、教师和小商店望尘莫及。他建议通过开发 \u0026ldquo;公共领域地理信息系统 \u0026ldquo;以帮助补救这一问题。\n大约在那个时期，一些如GRASS和MapServer的FOSS GIS项目发展势头良好。现在，众多的自由和开放源码软件选项允许桌面式的GIS数据处理、制图、网络服务托管和网络应用开发（Steiniger和Hunter，2013）。这种软件使用包括专有公司和开源社区在内的6个联合体开发的开放数据规范进行操作。自由和开源软件的使用是GIS向开放文化转变的一部分，包括开放数据、开放研究和开放教育(Sui 2014)。\n0x03 案例分析 FOSSGIS Brasil杂志  雄心勃勃的努力：自由与开源GIS相关信息的传播媒介  2011年，巴西系统分析师Fernando Quadro创办了一本葡萄牙语杂志，这也许是以期刊形式发布FOSS GIS信息的最雄心勃勃的努力。Quadro注意到巴西在FOSS GIS方面有很多有趣的工作，但是关于它的报道却分散在不同的出版物中，其中一些是以专有软件为中心。Quadro向他欣赏的人发出邀请，问他们是否愿意帮助创建一个完全关于FOSS GIS的出版物（Mendonça，2012）。结果是一本名为《FOSSGIS Brasil》的数字杂志，在2011-2012年出版了六期，内容丰富多彩，信息量很大，目标是每季度发行一次。期刊的长度大约在50至80页之间。\n最初的编辑核心成员利用他们的专业网络寻找可以撰写内容的自由和开放源码地理信息系统专家。该杂志包括关于自由和开放源码地理信息系统软件选择的文章，一个比较自由和开放源码地理信息系统与专利软件功能的专栏，巴西政府各部门成功实施软件的案例研究，以及对巴西自由和开放源码地理信息系统界人物的采访。例如，有一期杂志刊登了与时任巴西国家空间研究所所长的Gilberto Câmara关于SPRING GIS发展的对话(Medeiros，2011年)。 该杂志的地图画廊部分允许在巴西工业和政府工作的GIS分析师和制图师展示他们的工作。画廊的贡献者包括地理学家、教师和州、市两级的政府规划官员。 2011-2012年出版的FOSSGIS Brasil杂志  难以为继的壮志  该杂志的专业范围和外观掩盖了它完全由志愿者制作的事实，其中许多人还在养家糊口，从事全职工作，甚至经营自己的生意。由于投稿人面临着许多承诺，最初的季刊目标变得难以维持。FOSSGIS Brasil在大约一年半后戛然而止，但它的长期效益包括志愿者撰稿人建立的友谊和专业关系，其中一些人相隔数千公里，只能通过电子邮件交流（F. Quadro，2018）。此外，该杂志的后几期仍可在网上查阅，并构成了关于当时可用的自由和开放源码软件GIS选项的有用的葡萄牙语入门知识（其中大部分仍然适用）。\n今天，FOSSGIS Brasil的身份仍然是Facebook和Twitter，Quadro也有一个活跃的技术博客。这些社交媒体渠道允许更频繁的出版周期，而且它们比长篇杂志更容易维护。\nGeoinquietos Argentina  不安分的GISer  Geoinquietos是伊比利亚-美洲各地对地理空间科学和自由和开源软件感兴趣的地方团体网络。Geoinquietos阿根廷分会是这些团体中最活跃的一个，多次组织会议，吸引了南美南锥体地区和其他地区的数百人参加。Geoinquietos阿根廷分会的历史可以追溯到2007年OSGeo西班牙语分会的成立。由于西班牙语在广泛的地理区域内使用，因此需要更多的当地兴趣小组，让人们可以面对面地交流，分享与某个城市或国家相关的信息。因此，OSGeo西班牙语维基页面上最终形成了一个 \u0026ldquo;Geoinquietos \u0026ldquo;分会列表。西班牙文inquieto的意思是不安分或前卫；描述了这个群体对不断活动和自我提升的亲和力。\n 日益壮大的队伍  最初的几个Geoinquietos分会在西班牙，但在2012年5月，Mauricio Miranda添加了Geoinquietos布宜诺斯艾利斯分会（现为Geoinquietos阿根廷分会）的链接，这是西半球的第一个分会。从那时起，该地区又出现了其他Geoinquietos分会。巴西和葡萄牙也成立了分会，这一事实表明，Geoinquietos的品牌和使命可能与伊比利亚-美洲的特性而非西班牙语有更紧密的联系。 Geoinquietos阿根廷分会在2013年、2016年、2017年和2019年组织了 \u0026ldquo;FOSS4G阿根廷 \u0026ldquo;会议（发生在本稿件首次提交之后）。这些都是OSGeo的旗舰FOSS4G会议的地方变种，用于所有与FOSS GIS相关的事情。2017年的会议采用了FOSS4G+SOTM的双重绰号，以表明其与地图状态OpenStreetMap会议的关系。当年10月，会议在布宜诺斯艾利斯的阿根廷国家地理研究所（IGN）举行，为期六天。这次活动包括一个教育工作者圆桌会议日、两天的技术讲习班、两天的技术专题介绍和最多三个同时进行的会议轨道，以及一个黑客马拉松日，与会者为自由和开放源码软件地理信息系统项目，如OpenStreetMap、GeoNetwork和pgRouting做出了贡献。\n在2017年FOSS4G阿根廷的一次全体会议上，Miranda作为Geoinquietos阿根廷分会的发言人，介绍了该团体及其实践的概况（Miranda 2017）。他为该团体列举的目的包括商业和休闲的结合：学习、娱乐、工作、挣钱、教学、吃asado（阿根廷传统烧烤）、喝啤酒和改变世界。Miranda形容这个团体完全是无政府主义的，参与者没有等级制度。他坦言，利用FOSS提高成员的赚钱能力和商业潜力是一个真正的目标（\u0026ldquo;我们不是嬉皮士\u0026rdquo;），这也是前面提到的Evangelista（2014）\u0026ldquo;开放 \u0026ldquo;阵营的一个特点；然而，这个团体的理念与商业软件开发者不同：主要目标是分享知识和努力。虽然Miranda承认这看起来似乎不尽如人意，他指出，各省等政府实体往往一次又一次地向私营GIS咨询公司支付同样的服务费用，当社区可以共享技术信息时，这种冗余是一种浪费。\nGeoinquietos通过会议、非正式社交聚会(\u0026ldquo;geobeers\u0026rdquo;)、研讨会、FOSS4G会议、邮件列表、在线移动消息组和Twitter账户来完成其任务。该小组得到了阿根廷地理学院IGN的支持，从会议地点就可以看出，同时也得到了一些员工的FOSS宣传，包括当时的空间信息主任Horacio Castellaro。在这次会议的一个即兴小组讨论中，Castellaro提到他希望研究所完全摆脱与商业软件的联系。他强调，在商业软件上花费的每一比索都是国家损失的比索，而阿根廷没有办法把这些比索找回来。他认为，花在自由和开源软件上的比索将帮助更广泛的利益相关者群体。 会议主任Malena Libman也在小组讨论中分享了Geoinquietos如何为她提供完成地理空间技术学位所需的社会和技术支持。她说，Geoinquietos的发展是很重要的，因为世界不只是由欧洲和美国组成。自由和开放源码软件在阿根廷的扩展使得以前无法获得的新数据得以公布。虽然Geoinquietos的组织者们为了举办这次会议付出了漫长的时间，而且入场费不到17美元，但Libman只要求参与者用他们对社区的参与来 \u0026ldquo;支付 \u0026ldquo;他们。 会议组织者宣布，超过115人参加了此次活动，代表了政府、私营企业和大学的各种形式。也许是由于周边国家类似会议的稀缺性，造成了与会人员的多样性，其中包括来自智利、巴西、巴拉圭和委内瑞拉的与会者。在议程上发言的其他国家包括西班牙、墨西哥、秘鲁、意大利和美国。 阿根廷地质调查组织是如何如此成功地定期组织大型、技术性、低成本和有吸引力的会议，将成员聚集在一个地域辽阔和多样化的国家？正如前面提到的小组会议所证明的那样，该小组得益于一个高度敬业和始终如一的核心人员，而不是一个人做大部分工作。它还通过与那些兴趣相近，但社会和技术关注途径略有不同的团体结盟，找到了力量。例如，2019年，Geoinquietos Argentina联合OpenStreetMap Argentina和GeoChicas，根据阿根廷法律正式注册为非政府组织。这个组织自称GeoLibres，也就是 \u0026ldquo;地理自由者\u0026rdquo;。该组织的成立是为了向这些团体所服务的技术社区发出长期承诺的信号(M. Miranda，个人通信，2018年12月3日)。\n Geoinquietos的成员 该小组的许多成员是年轻的专业人员，他们通过当地的活动和该小组的交流渠道相互认识。这些联系由于该小组使用Telegram消息系统作为主要的交流手段而得到加强。Telegram可以被认为是一种发生在手机应用中的公共聊天室。Telegram的使用使Geoinquietos Argentina有别于其他许多使用传统邮件列表技术的FOSS GIS特殊兴趣小组，这让人回想起使用电子邮件多于短信的一代。即使是Twitter这样的社交媒体也可能过于正式和有条不紊，而不适合Geoinquietos Argentina Telegram聊天的特点，即欢快、轻松、偶尔也会有技术性的玩笑。  该小组还注重包容性，最近改变了一些品牌和宣传，使用了更加中性的 \u0026ldquo;Geoinquiet@s \u0026ldquo;一词。在政府设施内举行会议可能降低了成本，帮助该小组欢迎来自不同行业、国家和技能水平的人员。技术研讨会、教育者论坛和黑客运动的加入，扩大了参与者的帐篷，增加了会议体验的价值，使会议参与者有多种理由证明他们的出席，并获得最大的旅行投资回报。\n地理条件本身也可能对该团体的成功起到了一定的作用，因为阿根廷的经济和政府由布宜诺斯艾利斯主导，这个拥有近1500万人口的城市与该国其他地区有着良好的联系（联合国2018年，第25页）。对于许多与会者来说，参与活动需要跳上汽车、公共汽车或地铁，或最多乘坐一次短途飞机。全年的活动经常将参与者聚集在一起，这样，FOSS4G会议并不是他们聚集的唯一时间。其他南美的首要城市，如利马、圣地亚哥和蒙得维的亚可能会提供重要的潜在利益基地，可以孵化当地的技术社区。在较大的国家或没有灵长类城市的国家，如巴西，情况有所不同。巴西的地理环境，除了首都之外，还有几个主要的技术和经济中心，这可能会使形成一个核心的组织者群体具有挑战性，尽管它肯定可以为许多知识渊博和热情的参与者创造条件\nFOSS.4GIS.GOV conferences in Brazil 阿根廷Geoinquietos在聚集FOSS GIS社区方面的成功，在南美其他地区也得到了关注。曾经的FOSSGIS Brasil系列杂志的编辑Fernando Quadro在他的博客上感叹道：\u0026ldquo;为什么我们在这里没能举办如此规模的FOSS4G阿根廷活动？\u0026ldquo;为什么我们没能在巴西举办如此规模的活动（FOSS4G阿根廷）？. . . 我想知道为什么像巴西这么大的国家，有这么多有能力的人从事开源GIS，却没有一个年度活动来让社区聚集在一起，分享经验，建立网络和社交\u0026rdquo;（Quadro 2016）。在Quadro的文章之后，似乎有一些行动在2017年组织一个FOSS4G巴西会议，但计划最终被取消了。\n其实，在巴西首都已经发生过几次引人注目的开源GIS软件爱好者的聚会，但它们主要集中在政府应用方面。在2016年和2018年，FOSS.4GIS.GOV会议都聚集了数百名来自政府各部门的专业人士，分享他们对自由和开源地理空间技术的经验。这些会议的发言人包括来自国家数据处理服务机构SERPRO、巴西环境和可再生自然资源研究所（IBAMA）、奇科-门德斯生物多样性保护研究所（ICMBio）、国家电信局（ANATEL）、联邦警察和军队的代表。州级政府雇员、大学教授和QGIS Brasil的志愿者也做了演讲。参加这些活动是免费的，会议记录被张贴在YouTube上，为地理空间自由和开放源码软件界提供了一个有用的葡萄牙语信息来源。\nFOSS.4GIS.GOV的两次迭代都是在巴西利亚的IBAMA总部举办的，免费入场。在2018年会议的开幕式上，IBAMA的副主席Luciano Evaristo表示，该组织与联邦和地方警察联合开展的所有反砍伐森林任务都是从地质勘探工具开始的。Evaristo指出，他很早以前就看到了更换地质设备的经济价值。但他也对IBAMA通过实施自由和开放源码软件获得的软件质量印象深刻。\n对于IBAMA转向使用开放源码地理信息系统软件而言，国家环境信息和监测中心总协调员George Porto Ferreira发挥了重要作用。他的团队积极参与了Evaristo提到的亚马逊森林砍伐检测工作。与FOSS GIS社区的长期成员Luiz Pacheco Motta和IBAMA的其他同事合作，Ferreira带头举办了FOSS.4GIS.GOV系列会议。GOV系列会议。2016年的第一次聚会得到了欧盟方面的一些资助，并欢迎来自丹麦和意大利的访问代表。2018年的会议没有得到这笔资金，但看到会议向与主线FOSS4G系列会议的关联性靠拢。OSGeo似乎是一个潜在的未来资金来源，可以帮助确保活动的长期性，尽管一个更大的因素可能是IBAMA及其员工（或类似机构）定期支持会议的持续能力和主动性。\n0x04 结论 自由和开源GIS软件在南美洲有很强的影响力，政府在交互式地图网站中使用自由和开放源码软件，各种自由和开源软件的GIS和制图技术支持小组，以及开发软件以满足当地的地理探测需求，都证明了这一点。其中一些成功可能是由于整个地区对自由和开放源码软件的普遍友好态度，一些政府强制要求使用自由和开放源码软件，或者至少考虑将其作为专有软件的替代品。这种对FOSS的亲和力包括经济上的考虑，但也有一种强烈的信念，即保持软件代码的透明和投资资金的本地化是符合国家利益的。 本文对政府在国家一级使用和推广自由和开放源码软件给予了很多关注。由于南美洲的国家相对较少，如果不研究更多的地方政府层面，很难得出结论。除了本文研究的阿根廷各省外，还可以查询其他省市的FOSS实施情况，以更好地判断整个大陆的FOSS GIS吸收情况。对私营部门以及教育和非营利机构的调查将有助于提供全面的评估。研究自由和开放源码软件GIS在高等教育中使用的演变情况，以及这对每个国家的一般软件组合产生了什么样的影响(如果有的话)，将是很有参考价值的。\n本文讨论了三个特别成功的案例研究，这些案例研究通过教育和分享技术知识来推广自由和开放源码软件GIS并团结当地用户群体。这些案例研究的共同点是它们连接个人的能力。FOSSGIS Brasil在线杂志将一个庞大而多样化的国家的专业人士联系在一起。阿根廷的Geoinquietos小组通过现代移动通讯技术和定期聚会，使从业人员保持持续的联系。FOSS.4GIS.GOV会议将不同部委和不同管辖级别的政府官员联系起来。\n这三项工作中的每一项都是由积极性很高的人推动的，他们拥护自由和开放源码软件，并希望看到其在整个当地地区的使用。这种支持的理由包括经济利益(如IBAMA的Evaristo所提到的)，但也包括主权和政治的主题(如阿根廷Geoinquietos成员的声明，即软件投资留在当地是符合国家利益的)。这些将自由和开放源码软件的实施作为政治和经济独立的表现形式的想法在南美洲引起了共鸣。\n这些案例研究中涉及的阿根廷和巴西政府雇员表现出Shaw（2011）的 \u0026ldquo;叛乱专家 \u0026ldquo;的一些特征，他们在渗透到Lula的巴西各部委后，煽动了对FOSS的迁移。他们利用现有的权力在各自的机构中实施FOSS GIS。同时，南美洲和其他地方的政府实体经常看到雇员使用FOSS和专有软件混合使用，以满足个人偏好和功能需求。混合的方法可能会继续流行，尽管上述对国家网络地图浏览者的研究确实传达了这样一个教训：当FOSS被授权时，FOSS就会被使用。 世界各地的FOSS倡导团体可以从这些案例研究中学到什么？FOSSGIS Brasil杂志的退役和上面提到的一些其他技术支持团体（如Maptime）的活动水平有时会消失，这表明长期的势头是一个挑战。对于自由和开放源码软件来说尤其如此，因为很多工作都是由志愿者完成的，他们的兴趣和可能性可能会随着工作和生活阶段的不同而改变。Geoinquietos阿根廷分会的分权性质似乎帮助传递了持久的力量，Telegram消息系统使这个小组保持了灵活性、包容性和联系。最后，支持性合作机构的存在可以为会议提供场所，并提供一批有兴趣的活跃人士。 面对面的聚会需要付出极大的努力来执行，但却能在技术上和社会上促进招募和加强组织者的核心团队。2018年，全球FOSS4G大会首次来到非洲（达累斯萨拉姆），Geoinquietos阿根廷分会正在准备申办2021年在布宜诺斯艾利斯举办的大会。重新评估 \u0026ldquo;北美、欧洲、世界其他地区 \u0026ldquo;三年一次的FOSS4G会议轮流举办，以包括更灵活的国家组合，可以帮助OSGeo培养更多的全球焦点（尽管这种做法确实确保北美和欧洲并不总是主导申办过程）。同时，OSGeo对区域和地方会议的支持有助于加强新的自由和开放源码软件社区。阿根廷FOSS4G和FOSS.4GIS.GOV都借助政府办公室帮助降低了费用，让更多的人能够参加会议，这与在波士顿举行的2017年全球FOSS4G会议形成了鲜明的对比，该会议在海港酒店和世界贸易中心举行，每人注册费用高达800美元。尽管如此，非政府资金流也是有帮助的：在巴西举行的FOSS.4GIS.GOV 2018会议由于资金来源较少，规模小于2016年的迭代会议，但如果与OSGeo保持紧密的联系，会议的长期延续和扩大前景似乎是积极的。随着软件的可访问性和普及程度的提高，这次会议和上述其他举措应该是那些正在推广和开发自由和开源软件的人未来的兴趣所在。\n0x05 笔记 http://www.youthmappers.org.\nhttp://www.geochicas.org.\nhttps://wiki.openstreetmap.org/wiki/GeoChicas.\nhttp://www.gvsig.com/pt/comunidade/grupos-de-comunidades.\nhttps://softwarepublico.gov.br/social/i3geo.\nhttp://www.fernandoquadro.com.br/html/.\nhttps://wiki.osgeo.org/wiki/Cap%C3%ADtulo_Local_de_la_comunidad_hispanohablante.\n","date":1607608697,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607608697,"objectID":"0016891c7289b3c310d0931cd358df14","permalink":"https://coolgiserz.github.io/publication/free-and-open-source-gis-in-south-america/","publishdate":"2020-12-10T21:58:17+08:00","relpermalink":"/publication/free-and-open-source-gis-in-south-america/","section":"publication","summary":"全世界的地理信息系统从业人员享有越来越多的自由和开源软件（FOSS)选择。这种软件扩大了地理信息系统在经济发展中国家的使用范围，同时促进了当地技术专长的发展。本文回顾了南美洲对FOSS GIS的吸收和宣传，特别是它与该地区对自由和开放源码软件的政治友好气氛的关系。在南美洲面向公众的网络地图中评估了自由和开放源码软件GIS的使用与否，首先是在国家政府一级，然后是以阿根廷为研究对象的省一级。然后总结了南美洲围绕FOSS GIS的地方技术支持小组和软件开发方案。最后，介绍了在地方一级建立FOSS GIS技术社区的三个案例研究：FOSSGIS Brasil在线杂志、Geoinquietos Argentina professional network（地理信息学阿根廷职业网络）和巴西的FOSS.4GIS.GOV会议。对这些团体的领导人、动态和做法的研究，可以为世界各地处于类似情况下的为促进FOSS GIS的采用、发展、技能和服务而努力的其他团体提供参考。","tags":["IJGIS","开源"],"title":"「论文阅读」-南美洲的自由和开放源码地理信息系统：政治进展和地方宣传","type":"publication"},{"authors":[],"categories":[],"content":"","date":1607604211,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607604211,"objectID":"d0be192c03281ea1875633715848a2f0","permalink":"https://coolgiserz.github.io/post/attention-mechanism/","publishdate":"2020-12-10T20:43:31+08:00","relpermalink":"/post/attention-mechanism/","section":"post","summary":"","tags":[],"title":"Attention Mechanism","type":"post"},{"authors":["CoolCats"],"categories":["通勤流预测","嵌入学习","AAAI","论文阅读"],"content":"Learning Geo-Contextual Embeddings for Commuting Flow Prediction 0x00 引言 本文章题为“用于通勤流预测的地理上下文嵌入学习”。\n关键几个问题：\n 什么是通勤流？ 什么是地理上下文？ 如何对地理上下文信息进行嵌入学习？ 该方法工作效果如何？存在什么缺陷吗？  通勤流 什么是通勤流？ 通勤是一种从家到工作地的往返过程。日复一日的通勤行为形成了一个与社会经济因素密切关联的复杂网络。\n通勤流也被看作城市规划中的一个基本问题，因为其揭示了城市中劳动力供给与需求之间的空间关系。所以从城市规划的角度来看，有必要研究基础设施和土地利用对通勤流的影响。\n通勤流 通勤流预测与交通流预测有何区别？ 说的通勤流预测可能又容易联想到交通流预测，两者有什么区别呢？\n交通流预测是一个时序预测问题，在技术实现上需要将历史轨迹信息作为输入特征；而通勤流预测旨在揭示城市中劳动力供给侧与需求侧之间的空间关系，通常是只用节点属性信息（基建、土地利用）预测的是边级别的信号（如通勤流的大小）。\n0x01 相关工作 通勤流相关工作 针对通勤流预测问题，人们以前有用重力模型、非参数模型、介入机会模型。\n然而：\n(1) 重力模型只是简单地将物理定律搬过来，实际上不能很好地刻画复杂的通勤模式，应用效果不理想。\n(2) 现有的大多数机器学习模型只用OD点的节点属性特征，忽略了区域之间的空间依赖性\n介入机会模型倒是考虑了出发地、目的地周边对中心的影响，本文提出的地理上下文嵌入便受到这类方法的启发。\n图表征相关工作 图表征学习方面也有很多利用节点属性、节点邻域信息的方法，本文方法主要受GAT的影响，将自注意力机制引入到通勤流预测上，捕获地理上下文信息。\n0x02 本文观点 至此本文方法的基本框架已经出来了。\n 针对通勤网络 通过地理上下文嵌入学习地理单元及其上下文信息，通过多任务预测损失函数约束嵌入向量中的信息更适合进行通勤流预测。所谓的地理上下文信息就是指地理单元周围的POI、土地利用等信息，抽象来说就是邻域节点的属性。  GMEL\n用GAT将地理上下文信息编码到嵌入空间中 这里要注意的是文章提出用2个GAT分别建模出发地和目的地的特征，即要把劳动供给侧和需求侧的特征进行解耦。\n然后通过多任务学习框架约束嵌入向量更适应于流预测表示。\n通过多任务学习框架约束嵌入向量更适应于通勤流预测 主任务自然是通勤流预测，子任务是预测两个地理单元（出发地和目的地）的流入/流出量，这背后的直觉是通勤流与地理单元的流入/流出量之间高度相关，引入这两个子任务可以约束嵌入向量包含更多有助于通勤流预测的信息（监督信号）。\n基于GMEL和多任务学习框架的通勤流预测 前面基于GMEL可以获得地理单元的嵌入向量，基于这些向量在训练一个回归学习器（如梯度提升树、随机森林）便能进行通勤流预测。算法如下：\n 端到端地训练一个GMEL（预训练过程） 基于嵌入向量再训练一个流预测模型  训练算法 0x03 实验 实验部分需要验证的点包括：\n 地理上下文信息是否真的有助于通勤流预测？ 使用两个GAT分别建模供给特征和需求特征是多此一举吗？ 有必要引入多任务学习框架吗？  实验环境 用到了通勤流、土地利用的数据集和距离计算的包。\n实验结果 观察实验结果可发现：\n 所有GMEL系列的模型都比基准模型要好，表明地理上下文信息有助于通勤流来说 标准的GMEL比另外两个变种表现好，验证了多任务学习框架的有效性和对供需特征解耦的必要性  测试表现 参数敏感性分析 、残差分析也表明方法的鲁棒性。\n残差分析 0x04 结论 总结全文，文章提出利用地理上下文信息预测通勤流，并提出一个嵌入学习框架来学习地理单元的上下文信息，结果表明引入这种信息是有助于通勤流预测的。\n","date":1607516303,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607516303,"objectID":"b1e542f793e69f4070bf089691ac791a","permalink":"https://coolgiserz.github.io/publication/learning-geo-embeding-for-commute-flow-prediction/","publishdate":"2020-12-09T20:18:23+08:00","relpermalink":"/publication/learning-geo-embeding-for-commute-flow-prediction/","section":"publication","summary":"根据基础设施和土地使用信息预测通勤流量对于城市规划和公共政治发展至关重要。然而，由于通勤流的复杂模式，这是一项具有挑战性的任务。传统的模型，如重力模型，主要是从物理学原理中得出的，在现实世界中需要考虑很多因素的情况下，其预测能力有限。同时，现有大多数机器学习的方法忽略了空间相关性，没有对区域间的依赖关系进行建模。为了解决这些问题，我们提出了Geo-contextual Multitask Embedding Learner(GMEL)，一个从地理上下文信息中捕捉空间相关性的模型，用于通勤流量预测。具体来说，我们首先构建了一个包含地理上下文信息的地理适应性网络。然后，提出了一种基于图注意力网络（GAT）框架的注意力机制，以捕捉空间相关性，并将地理环境信息编码到嵌入空间。两种不同的GAT分别用来模拟供给和需求的特征。 为了提高嵌入表示的有效性，多任务学习框架用于引入更强的限制，迫使嵌入封装- sulate流量预测的有效表示。最后，基于学习到的EM- beddings训练梯度提升机来预测换乘流量。我们使用纽约市的真实世界数据集来评估我们的模型，经验-心理结果证明了我们所提出的方法与现有技术的有效性。","tags":["嵌入学习"],"title":"「论文阅读」-学习用于通勤流嵌入的地理上下文嵌入","type":"publication"},{"authors":[],"categories":null,"content":"","date":1594430231,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594430231,"objectID":"ec6a084c153de35e76ba7d521e5596c3","permalink":"https://coolgiserz.github.io/event/yunnan-trip-2020/","publishdate":"2020-12-11T09:17:11+08:00","relpermalink":"/event/yunnan-trip-2020/","section":"event","summary":"","tags":[],"title":"七彩云南之行 2020","type":"event"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1587945600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1587945600,"objectID":"bbf4896a5289eaf2beeac065b47157d5","permalink":"https://coolgiserz.github.io/project/osm-route-planning/","publishdate":"2020-04-27T00:00:00Z","relpermalink":"/project/osm-route-planning/","section":"project","summary":"An example of using the in-built project page.","tags":["OSM","C++"],"title":"Internal Project","type":"project"},{"authors":["CoolCats"],"categories":null,"content":"疫情期间\n 离京\n","date":1583857245,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1583857245,"objectID":"c6894cc6564bfce318c2fbe27e16dfdf","permalink":"https://coolgiserz.github.io/event/beijing-trip-2020/","publishdate":"2020-02-11T00:20:45+08:00","relpermalink":"/event/beijing-trip-2020/","section":"event","summary":"疫情期间\n 离京","tags":[],"title":"北京之旅 2020","type":"event"},{"authors":["CoolCats"],"categories":["资源"],"content":"编程||软件开发 论坛  stackoverflow  练习平台  Code Jam tutsplus sitepoint Leetcode  工具  tortoisegit：https://tortoisegit.org/ 数据字典工具：https://dbmstools.com/data-dictionary-tools DBeaver Mock data generator：https://github.com/dbeaver/dbeaver/wiki/Mock-Data-Generation-in-DBeaver  问卷调研  问卷星：https://www.wjx.cn/newwjx/manage/myquestionnaires.aspx  需求分析   Mindmaps：https://www.mindmapping.com/\n  mindmaps：https://www.mindmaps.app/ Github开源，基于HTML5，Js，Css。项目地址：https://github.com/drichard/mindmaps\n  Mindmap： chrome扩展\n  Coggle: 实时协作\n  FreeMind：https://sourceforge.net/projects/freemind/files/latest/download 免费思维导图软件，由Java编写\n  XMinds:https://www.xminds.com/\n  架构设计  Visio：https://products.office.com/zh-cn/visio/flowchart-software plantuml：http://plantuml.com/zh/class-diagram Edraw：https://www.edrawsoft.cn/ Rational Rose：  协作工具   Github：https://github.com/ 共同开发，分布式版本控制\n  SVN：https://tortoisesvn.net/\n  OneNote：http://www.onenote.com/download/\n  Teamviewer：https://www.teamviewer.com/cn/ 多人会议\n  集成开发环境||编辑器   Atom：https://atom.io/ Github推出的跨平台文本编辑器\n  Netbeans：https://netbeans.org/ 开源Java IDE。可扩展于PHP、C++等语言开发\n  Pycharm：https://www.jetbrains.com/pycharm/ JetBrains推出的Python开发环境\n  IntelliJ IDEA：https://www.jetbrains.com/idea/ JetBrains推出的Java开发环境\n  Eclipse：https://download.eclipse.org/ 基于Java的可扩展开发平台，通过插件组件构建开发环境\n  Code::Blocks：https://www.codeblocks.org/ 开源全功能C++开发环境，使用wxWidgets图形界面库，由C++语言开发完成\n  Aptana Studio 3：https://www.aptana.com/ 开源Ajax开发环境\n  CLion：https://www.jetbrains.com/clion Jetbrains推出的C++开发环境\n  CodeLite:https://codelite.org 开源，C/C++编程语言的跨平台IDE\n  Komodo:https://www.activestate.com/products/komodo-ide/\n  Xcode:https://developer.apple.com/xcode/\n  Visual Studio：\n  Sublime：http://www.sublimetext.com/\n  模拟  夜神模拟器：https://www.yeshen.com/ Easy-Mock：https://easy-mock.com/  库   ms4w：https://ms4w.com/ MapServer for Windows\n  angular：https://angularjs.org/\n  JQuery：http://jquery.com/\n  React：https://reactjs.org/ js构建用户界面\n  jQuery插件：http://plugins.jquery.com/\n  wxwidgets：https://www.wxwidgets.org/ 轻量级C++ GUI库\n  学习资源  Javascript：https://github.com/jobbole/awesome-python-books  云平台  LeanCloud：https://leancloud.cn/ Google Earth Engine：https://earthengine.google.com/  设计 原型设计   ProcessOn：https://www.processon.com/diagrams 团队协作、流图绘制\n  Mockingbird：https://gomockingbird.com/home 在线原型设计平台\n  Gliffy：https://www.gliffy.com/\n  Drawanywhere：http://www.drawanywhere.com/\n  Sketch：http://www.sketchcn.com/ Mac用草图软件\n  图标生成\u0026amp;\u0026amp;下载   Easyicon：https://www.easyicon.net/\n  iconbench：http://iconbench.com/\n  Fontello：http://fontello.com/\n  icondeposit：https://www.icondeposit.com/\n  iconarchive：http://www.iconarchive.com/\n  Flaticon：https://www.flaticon.com/\n  Logo设计  logospire：http://logospire.com/  壁纸  wallpaperscraft：https://wallpaperscraft.com/  可视化  processing：https://processing.org/ Dionysus：https://www.mrzv.org/software/dionysus/ apophysis：http://www.apophysis.org/downloads.html guihi：http://gudhi.gforge.inria.fr/python/latest/ d3.js：https://d3js.org pyechart：https://pyecharts.org/#/zh-cn/global_options?id=legendopts：图例配置项  信息安全 C\u0026amp;C 网络流量 whonix：https://www.whonix.org/\n其他电脑工具 下载工具  IDM：http://www.internetdownloadmanager.com/  数学  MIT Gibert-Strang：http://www-math.mit.edu/~gs/  GIS二次开发 Python  pywin32：https://github.com/mhammond/pywin32  Github Tools Summary  伯乐在线整理：https://github.com/jobbole/  论文 论文查重  http://www.cnkicheck.info/  学习资源  Git分支：https://learngitbranching.js.org/ 图解Git：https://marklodato.github.io/visual-git-guide/index-zh-cn.html GoogleBlog：https://ai.googleblog.com/ Wavelab_850：http://statweb.stanford.edu/~wavelab/Wavelab_850/download.html  ","date":1555773945,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555773945,"objectID":"c72f284aa80c75608ecec300eb786919","permalink":"https://coolgiserz.github.io/post/useful-resources/","publishdate":"2019-04-20T23:25:45+08:00","relpermalink":"/post/useful-resources/","section":"post","summary":"编程、软件、设计等工具","tags":["资源","书签"],"title":"各类有用书签资源汇总","type":"post"},{"authors":[],"categories":[],"content":"Free and open source GIS in South America: political inroads and local advocacy ZhuGuowei, 2020-12-08\n 0x00 Outline    Public openness toward FOSS in South America\n  FOSS GIS in South America\n  Case studies of FOSS GIS community activity\n   0x01 Introduction  What does FOSS and FOSS GIS mean?   Freedom to run the program as you wish\n  freedom to study and change the program\n  freedom to redistribute copies\n  freedom to distribute copies of your modified versions\n   In contrast: proprietary software restricts access to the source code and often requires license fees.\n  proprietary GIS software  ArcGIS MapInfo Manifold GIS   FOSS GIS software   Desktop-based mapping and data processing: QGIS、GRASS、gvSIG、SAGA\n  Web service publishing:\nMapServer、GeoServer\n  Website programming:\nLeaflet、OpenLayers\n  Backend data storage:\nPostreSQL、PostGIS\n   Why should we pay attention to FOSS GIS in South Amerca?   there is a substantial FOSS GIS adoption occurring in some South American governments,\n  this uptake maybe occurring for a different mix of reasons than observed or expected with FOSS adoptions in the Global North.\n   0x02 Public openness toward FOSS in South America  South America has seen a unique variety of laws and decrees at the city, state, and federal levels promoting FOSS use on government computers\nFigure 1. Notable country-level policies in South America related to goverment use of FOSS\n南美洲国家政府对于FOSS的政策法令 --  Beyond encouraging FOSS, some governments even mandate its use for state business. For examples,\n  Venezuela’s ‘Infogobierno’ law requires public institutions migrate to FOSS\n  Bolivia has enacted a series of decrees leading toward public sector migration to FOSS\n  the tendency to adopt strict mandates of FOSS was more common in Latin America and Africa than in other parts of the world. Policies in other regions tended to take more of a hands-off advisory role. \n Why have these South American governments been so aggressive about adopting FOSS?   Technical factors\n  Economic factors\n  Social factors\n  Political factors\n   Technical factors   Recent government crackdowns on illegal software copying are leading public institutions to look for lower-cost software alternatives\n  Some have recognized FOSS solutions as a way to not only economize, but also foster local skills, develop context-specific applications, and institute social changes\n  These licenses also allow modification and redistribution of the code, providing a way to fix, enhance, or internationalize the software without waiting for a vendor to release a (potentially costly) upgrade. \n   Economic factors   An attractive element of FOSS for the public sector is that the software can be distributed without licensing fees\n  The amount of money required to keep proprietary software running in government offices is substantial\n   Social factors   The reasons for government promotion of FOSS in South America go beyond economics, and involve attitudes about society, sovereignty, and the role of the state.\n  Chan (2004) noted that this line of reasoning represented a key difference from FOSS promotion in North America, where supporters tended to emphasize FOSS’s protection of consumer freedoms.\n   Political factors   the idea of FOSS is an avenue to independence from the perceived imperialism of US-based proprietary software companies has appeared across social stratum.\n  Free software represents the values: equality, freedom, sovereignty, right to choose, democracy, and development.\n   0x03 FOSS GIS in South America  four countries, which have supported FOSS through legislation or decree at the national level, using FOSS GIS for their principal map viewers (Bolivia, Ecuador, Uruguay, and Venezuela).\nBrazil is the only country with national support for FOSS that is not using FOSS in its principal map viewer\n Most of the provincial sites in the below table are using well-known and basic FOSS GIS software.  stability and long-term maintenance of some of the sites appear to be challenges.\n Local technical support groups for FOSS GIS   exchange troubleshooting tips,\n  share ideas and success stories,\n  post employment information,\n  arrange conferences and meetups of people with similar skills and interests.\n   Local software development   An important indication of FOSS GIS presence in any region is the local production and improvement of software\n  FOSS development is evidence of this process occurring. FOSS GIS development efforts in South America include the aforementioned\n translation of user interfaces, the testing and use of products, the creation of new software to meet community needs.     Ibero-America has incubated several FOSS GIS programs that are widely used in South America.\n  One of these is gvSIG, a desktop GIS program developed in Valencia, Spain.\n  Another GIS, called SPRING, was developed by the Brazilian National Institute for Space Research (INPE).\n  Other open source GIS tools developed by Brazilian government and educational institutions include i3Geo, E-foto, and TerraLib\n   0x04 Case studies of FOSS GIS community activity    FOSS GIS Brasil magazine\n  Geoinquietos Argentina\n  FOSS.4GIS.GOV conferences in Brazil\n   FOSS GIS Brasil magazine   the most ambitious effort ever to publish information about FOSS GIS in periodical format was a Portuguese language magazine.\n  The magazine included articles about:\n FOSS GIS software options comparing functionalities of FOSS GIS with proprietary software case studies of successful software implementations in various branches of the Brazilian government interviews with figureheads in the Brazilian FOSS GIS community     Geoinquietos Argentina  Geoinquietos is a network of local groups throughout Ibero- America interested in geospatial sciences and FOSS.   The Geoinquietos Argentina chapter has been one of the most active of these groups,\n  repeatedly organizing conferences that attract hundreds of people from the Southern Cone area of South America and beyond.\n     FOSS.4GIS.GOV conferences in Brazil   The success of Geoinquietos Argentina at gathering the FOSS GIS community was noticed in other areas of South America.\n  Actually, several notable gatherings of open source GIS software enthusiasts have occurred in Brazil’s capital, but they have largely focused on government applications.\n  the FOSS.4GIS.GOV conference brought together hundreds of professionals.\n   0x04 Conclusions   FOSS GIS has a strong and growing presence in South America, evidenced by  government use of FOSS in interactive map websites, the variety of FOSS technical support groups for GIS and mapping, and the development of software to meet local geoprocessing needs.      Some of this success is likely due to the generally friendly attitude toward FOSS throughout the region, where some governments have mandated that FOSS be used, or at least considered, as an alternative to proprietary software.    Such affinity toward FOSS includes economic considerations, but also a strong belief that national interest is served by keeping software code transparent and investment money local.   Thanks! ","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"85aecc93afbc9dc63e0c8afa49005451","permalink":"https://coolgiserz.github.io/slides/free-and-open-source-gis-in-south-america/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/free-and-open-source-gis-in-south-america/","section":"slides","summary":"Free and open source GIS in South America.","tags":[],"title":"Slides","type":"slides"},{"authors":[],"categories":[],"content":"Free and open source GIS in South America: political inroads and local advocacy ZhuGuowei, 2020-12-08\n Introduction  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"e26a326b781f30bad2d960ba8592d05b","permalink":"https://coolgiserz.github.io/slides/geo-embedding-for-commuting-flow-prediction/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/geo-embedding-for-commuting-flow-prediction/","section":"slides","summary":"Free and open source GIS in South America.","tags":[],"title":"Slides","type":"slides"},{"authors":[],"categories":[],"content":"论文查阅系统：\n CSU Web Of Science ScienceDirect 万方数据资源系统 维普中文期刊 IEEE  Keywords  环境（退化/保护）成本 环境会计 环境成本计算 （虚拟/实际）治理成本 生态系统管理/服务 生态系统服务功能 生态系统服务价值 土地开发项目 生态系统价值计算 价值评估 绿色经济核算 绿色发展（实践/框架） 生物物理量化 生物圈 生物多样性   主题 环境退化的代价？\n 生态功能的持续性利益建模  效益  供应  食物供应 植物授粉   调节  植物碳固定——能值法？ 水（自净、防洪等）——以人类基础设施替代（如净水设施、防洪设施等） 生物多样性——难点   文化  精神 宗教     考虑  定义生态系统服务 等效替代 水环境退化成本——人工水污染治理花费（查数据）+生物多样性损失建模（？） 森林退化——空气污染治理成本      Tasks  建立一个生态服务估值模型 用模型评价不同规模的土地利用项目的成本规模效益分析 基于以上分析模型设计评估模型的有效性 模型对于土地利用项目规划者和管理者有何启示？ 模型随着时间变化需要作出怎样的修改？  Existing Mathods  NPP(net primary production) 元分析   References An ecological perspective on the valuation of ecosystem services The value of the world’s ecosystem services and natural capital [paper] Valuing ecosystem services: A shadow price for net primary production：http://sites.bu.edu/cliveg/files/2013/12/arr01.pdf 从两个问题出发：生态系统服务对于传统指标如GDP度量的经济是否有贡献？这种贡献能否被用作隐式的价格来进行计算？ net primary production\n 相关因素  碳固定 蒸腾作用 土地腐蚀（负相关） 生物量   直接 间接 文化（旅行费用法，享乐价格）  计算方法   The history of ecosystem services in economic theory and practice: From early notions to markets and payment schemes Valuing a diversity of ecosystem services: The way forward to protects trategic groundwater resources for the future? [link]\nData Sources  https://www.weather.gov/dmx/ 美国国家海洋和大气管理局 Penn_World_Table ScienceBase [link] US Landcover [link] Bison Web 美国鱼类栖息地退化图 美国生态系统恢复的经济影响 水资源普查 欧洲 Emerge-nead IPCC IPCC数据分发中心 NEAD [link] 欧洲疾病预防控制中心 欧洲环境代理 美国国家能源数据系统 电力数据浏览器 NREL美国各州太阳能数据 美国劳动力数据 美国劳工统计局 Economic Research Gloåbal Economic EmergyDatabase： [link1] [link2] 美国人口普查局 国家管道测绘系统 NAICS 美国各州劳动力统计表 排放和发电资源综合数据库 德克萨斯州全州图像和GIS数据 卡尔加里大学图书馆（GIS资源） 佛罗里达环境保护部 美国城市开放数据普查 OpenData_CityOfNetwork PURDUE图书馆 The Nature Con Map of Life 气候数据图 EPA  Baike   旅行费用法\n  生物量： [link1] [link2]\n  初级生产   Cobb-Douglas生产函数及其优缺点: [link1] [link2] [link3]\n  PWT   元分析：https://zh.wikipedia.org/wiki/%E5%85%83%E5%88%86%E6%9E%90\n  影子价格 [link1] [link2] [link3]   生态服务价值   环境成本分类   生态系统服务分类\n  能值法指数解释\n  土地利用规划\n  中国森林生态系统\n  土地使用规划\n  ArcGIS交集制表\n  美国风能资源\n  劳动力参与率\n  固定资产投资\n  matlab字符串处理函数\n  Matlab File Exchange\n  BEA in the classroom\n  面板数据分析\n  非货币生态系统核算体系   国际统一阶段代码 https://www.iso.org/stage-codes.html#50.20\n  国际标准组织污染、污染控制 https://www.iso.org/ics/13.020.40/x/\n  温室气体协议 https://ghgprotocol.org/\n  组织的温室气体排放量化和报告规范及指南\n  能值和变革 http://www.emergysociety.com/emergy-and-transformity/\n  python excel https://zhuanlan.zhihu.com/p/23998083\n  加州内化达Public Viewer https://pvnpms.phmsa.dot.gov/PublicViewer/\n  国家空气毒物评估 https://www.epa.gov/national-air-toxics-assessment\n  2014 National Air Toxics Assessment https://gispub.epa.gov/NATA/\n  成本效益分析 https://www.britannica.com/topic/cost-benefit-analysis\n  statisca统计门户网站 https://www.statista.com/topics/2582/subway/\n  斯坦福确定项目成本与效益\n  plannerWeb：http://plannersweb.com/2013/12/pro-forma-101-what-will-it-cost/\n  Agent-based Model   clarkLab https://clarklabs.org/ https://en.wikipedia.org/wiki/TerrSet\n  美国土地利用\n  IDRISI part1 part2 part3\n  时间序列平稳性\n  清洁空气法文本\n  us air quality standard\n  Considerations  一个真实的土地利用项目考虑上生态因素后的真实经济成本是？   大型  全国铁路网建设 全国管网 水坝   小型  元胞自动机多智能体模拟？ 植被面积变化、水文条件可能发生变化、空气可能会有污染（旧式火车）等等。缓冲区分析？    ","date":1548774155,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548774155,"objectID":"39c9cc8a5da040968cbaf42dfb657aaf","permalink":"https://coolgiserz.github.io/post/icm-2019/","publishdate":"2019-01-29T23:02:35+08:00","relpermalink":"/post/icm-2019/","section":"post","summary":"美国大学生数学建模竞赛2019问题E资料小结","tags":[],"title":"MCM/ICM 2019 Problem E","type":"post"},{"authors":[],"categories":[],"content":"哈夫曼树 哈夫曼树特点 哈夫曼树又称最优二叉树，是一种带权路径长度最短的二叉树。常可用作无损压缩。\n 每个结点只有0或2各子节点 同一组权值得到的哈夫曼树可能不唯一 权值越大的结点越靠近哈夫曼树的根节点，权值越小的结点越原理哈夫曼树的根节点 一棵有n各叶子结点的哈夫曼树共有2n-1个结点 带权值的结点都是叶子结点，不带权值的结点都有子结点  哈夫曼树构建 此处把哈夫曼树构建过程分为2个步骤：数据组织、构建树\n数据组织 数据组织包括对原始数据的预处理，如原始数据是一段字符串，考虑使用什么数据结构对字符串中的字符及其发生频率进行组织，发生频率越高的字符认为其权重越大，于是对其“特殊照顾”。如使用链表或数组组织每个字符，每个节点的数据结构可如下：\npackage com.coolcats.tree; /** * 哈夫曼树二叉树节点 * @author CoolCats */ public class Node { public Node left,right;//左子节点 public int weight; //右子节点 public String data; // 数 据 public Node() { } public Node(String data,int weight) { this.data = data; this.weight = weight; } public String toString() { return this.data+\u0026quot;:\u0026quot;+this.weight; } }  而后对节点列表按照其权重大小进行排序，不失一般性，此处升序排序:\n/** * 列表排序 * * @param list */ private void sortList(ArrayList\u0026lt;Node\u0026gt; list) { Node minNode = null; Node jNode = null; for (int i = 0; i \u0026lt; list.size() - 1; i++) { int min = i; for (int j = i + 1; j \u0026lt; list.size(); j++) { minNode = list.get(min); jNode = list.get(j); if (minNode.weight \u0026gt; jNode.weight) { min = j; } } if (min != i) { Node tmpNode = list.get(i); list.set(i, list.get(min)); list.set(min, tmpNode); } } }  构建树 得到了排序后的列表后，就可以构建树了，由于哈夫曼树的特点，小权值的节点尽可能远离根节点、大权值的节点尽可能靠近根节点，并且无法预估根节点到底在什么高度上，所以只能采用自底向上的方式构建哈夫曼树。具体步骤为\n 输入排序后的列表， 判断列表个数是否大于1，如果是，从中取出最小的两个元素，构造父节点，如果否，跳到4 将父节点添加到列表中，对列表重新排序，回到2 将列表中最后一个元素作为哈夫曼树根节点 如此便可得到哈夫曼树  哈夫曼压缩 所谓哈夫曼压缩，就是利用哈夫曼树的性质实现对文件的无损压缩。 通常来说，数据在计算机中的存储按字节来计算，一个ascii码字符占一个字节，一个汉字字符占2个字节，这种每个字符都通过相同来表达的编码形式称为定长编码。而哈夫曼压缩就是通过变长编码的方式实现对文件的压缩，其思想是根据字符出现的概率来确定编码的长度，出现概率大的字符采用较短的编码来存储，出现概率小的字符采用较长的编码来存储。\n哈夫曼压缩实现 对于哈夫曼压缩可靠性而言最关键的保证是：任何一个字符的编码前缀都不能是另一个字符的编码。如果将一个节点到其左节点的路径标记为0，到其右节点的路径标记为1，那么，从根节点到每一个叶子节点所得到的哈夫曼编码是唯一的，且任一哈夫曼编码不是其他编码的前缀，满足条件。因此，实现压缩功能只要计算出每个字符的哈夫曼编码即可。在遍历哈夫曼树的同时计算哈夫曼编码的代码如下：\n/** * 后序遍历的同时标记每个节点的哈夫曼编码 * * @param root * @param code */ private void postOrder(Node root, String code) { if (root.left != null) // 左路径标记为0 postOrder(root.left, code + \u0026quot;0\u0026quot;); if (root.right != null) { // 右路径标记为1 postOrder(root.right, code + \u0026quot;1\u0026quot;); } // 输出哈夫曼树叶子节点编码 if (root.left == null \u0026amp;\u0026amp; root.right == null) { System.out.println(root.data + \u0026quot;\u0026lt;\u0026gt;\u0026quot; + code); // 将各个字符的哈夫曼编码存储 map.put(root.data, code); map1.put(code, root.data); } }  于是，在存储一个字符串时，只需要遍历这个字符串，取出每个字符对应的哈夫曼编码，每8位作为一个字节存储到文件中即可实现压缩，但要注意，哈夫曼编码的组合并不一定是8的整数倍，这可以通过“补0”来解决，所以存储压缩文件的时候还要把补0的个数记下，以便解压缩。一个demo版的代码如下：\n/** * 根据给定的路径以及哈夫曼编码将哈夫曼码存进相应的文件中 要存入压缩文件的信息，补了多少个0 * （demo版，效率较低） * @param path 压缩文件的路径 * @param code 哈夫曼编码 */ private void hfcode2file(String path, String code) { int len = code.length(); System.out.println(\u0026quot;哈夫曼编码长度：\u0026quot; + len); int comple = 8 - len % 8; if (comple \u0026lt; 8) { for (int i = 0; i \u0026lt; comple; i++) { code = code + \u0026quot;0\u0026quot;; } } OutputStream out = null; DataOutputStream dout = null; File file = new File(path); try { out = new FileOutputStream(file); dout = new DataOutputStream(out); int count = (len + comple) / 8; byte[] b = code.getBytes(); dout.writeInt(comple); dout.write(b); } catch (FileNotFoundException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } finally { try { out.close(); dout.close(); } catch (IOException e) { e.printStackTrace(); } System.out.println(\u0026quot;压缩文件完成\u0026quot;); } }  解压缩就是根据读取文件的位，每读到一个哈夫曼编码（使用哈希表，判断是否存在对应的key）就返回其对应的字符，一直到文件末尾。\n/** * 解压缩 * @param path * @return */ private String file2hfcode(String path) { String code = null; InputStream in = null; DataInputStream din = null; int comple; File file = new File(path); try { in = new FileInputStream(file); din = new DataInputStream(in); comple = din.readInt(); byte[] bb = new byte[1024]; int res = din.read(bb); code = hfcode2String(bb,res,comple); } catch (FileNotFoundException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } return code; }  问题思考  哈夫曼树的压缩效率如何？ 哈夫曼树压缩在什么场景下不适用？ 考虑包含中文等非英文国家字符的文件压缩应该如何实现？ 字典压缩（LZ77，LZ88，LZW等）  参考文献 哈夫曼编码维基百科\nLZW编码维基百科\nLZW压缩算法\n","date":1545231346,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1544453746,"objectID":"7d379e6f4158492f1588c3d8d093c088","permalink":"https://coolgiserz.github.io/post/hftree-datastructure/","publishdate":"2018-12-19T22:55:46+08:00","relpermalink":"/post/hftree-datastructure/","section":"post","summary":"哈夫曼编码——无损数据压缩的熵编码算法","tags":[],"title":"哈夫曼编码及其实现","type":"post"},{"authors":[],"categories":["OOP"],"content":"0x00 概念 首先区分两个概念：关键字和保留字。关键字指事先定义的，用来表示一种数据类型或者程序结构的对于编译器有特殊意义的“字符串”。而保留字则是预留的关键字，即现在还没有用到，但以后可能会作为关键字被使用。 所以，认识关键字与保留字的一个基本的作用，起码就在于为变量命名时不至于与关键字冲突、或者与“未来的关键字”冲突（如果使用了关键字、保留字作为变量命名，比较智能的IDE是会报错的，但如果用记事本或者在线刷题那就不一定有这么好的福利了）。当然，要真正使程序高效、健壮，那就要深刻认识各个关键字的内在含义。\n0x01 关键字总览 目前而言，Java的关键字有50个，还有一些保留字。其中保留字包括：goto、const，这是C++中的关键字。而关键字可大致分为9类。清单如下：\n 包相关（2个）：import、package 访问控制相关（3个）：public、protected、private 类、接口、抽象类、对象相关（6个）：class、interface、abstract、implements、extends、new 数据类型相关（9个）：void、short、int、long、float、double、byte、char、boolean、null 异常处理相关（5个）：try、catch、finally、throw、throws 程序控制结构相关（13个）：if、else、switch、case、break、default、for、continue、while、do、return、instanceof 修饰类、方法、属性、变量相关（7个）：static、final、native、synchronized、transient、volatile、strictfp 变量引用相关（2个）：super、this 其他（2个）：assert、enum  0x02 包相关 类似于C++中的命名空间，java提供了包机制用于区分不同组织、个人所编写的类，有效防止命名冲突，方便共享java程序。\n  package关键字 声明编译单元属于某个类库。如果使用package语句，它必须是文件中除了注释以外的第一行语句。\n  import关键字 导入包。\n  0x03 访问控制相关 对于java而言，访问控制权限可分为：public、protected、默认的、private，上述四种访问权限的大小排序是从大到小的，其中默认访问控制权限没有关键字。\n  public 接口访问权限\n  protected 继承访问权限\n  private 私有的\n  0x04类、接口、抽象类、对象相关   class 定义类的关键字\n  interface 定义接口的关键字。\n  abstract class 定义抽象类的关键字\n  extends 继承类或接口的关键字。类继承类，接口继承接口\n  implements 实现接口的关键字。一个类实现了某个接口就必须要实现该接口下的所有方法。\n  new 实例化对象。java完全采用了动态分配配内存的方式，即使用new关键字来动态创建对象实例，当对象不再被使用时，由垃圾回收器（GC）自动销毁对象，释放其占用的内存空间。\n  null 表示空对象。\n  0x04 数据类型相关   void 空返回类型，用于修饰函数。\n  byte 字节类型，占8 bit。因java中byte类型默认是带符号的，所以其范围为-2^7~2^7-1，即-128~127。 直接对两个byte类型的变量进行相加，其会自动转型为int，要对其进行强制转型。\n  short 短整型，占16 bit。范围-2^15~2^15-1。即Short.MIN_VALUE~Short.MAX_VALUE。\n  int 整型，占32 bit。范围-2^31~2^31-1。\n  long 长整型，占64 bit。范围-2^63~2^63-1。尽管long的范围已经比较大了，但要求如斐波那契数列数值时，还是很容易失效，比如要求斐波那契数列第一百个数，就超出了long类型所能表示的范围，此时考虑使用大整数，java中提供了BigInteger类型。\n  float 浮点型，占32 bit。\n  double 双精度型，占64 bit。java中double和float都是以科学计数法的方式进行表示。\n  char 字符型，16 bit。\n  boolean 布尔类型，取值true or false。\n  0x05 异常处理相关   try 捕获异常。 包含可能发生异常的语句块。\n  catch 处理异常。包含对异常的处理，一般用于提示开发者代码中不对劲的地方。\n  finally 指定不管是否发生异常都要执行的语句块。\n  throw 抛出异常对象。\n  throws 声明一个方法可能会抛出某种异常。（抛给调用该方法的地方）\n  0x06 程序控制结构相关 if、else、switch、case、break、default、for、continue、while、do、return、instanceof\n0x07 修饰类、方法、属性、变量相关   final final表示最终的，其用于修饰的对象都不可更改。final可修饰的内容包括：\n 类 用final修饰的类不可被继承。 普通方法 用final修饰ide普通方法不可被重写。（构造方法本身就不可被重写） 属性、变量、常量、形参 不可被改变。当final修饰基本类型时，参数值在方法体中不可被改变；修饰引用类型时，参数变量所引用的对象也不可改变。    static 一般来说，在创建类时，就是在描述那个类ide对象的外观和行为，在使用new创建对象之前，实际上并没有获得任何对象，只有当执行new之后，对象的数据存储空间才被分配，才可以被外界所调用。但如果希望特定的域不与类的任何对象关联在一起，即不创建对象也能够调用该方法，就可以考虑使用static关键字来修饰特定的域。 当使用static关键字声明某个属性或方法时，就意味着这个域或者方法不会与包含它的那个类的任何对象实例关联在一起。用static修饰的域或者变量存储在静态存储区域，在类被创建时优先被加载到内存中。 static可以修饰的内容包括\n 属性 常量 内部类 普通方法 要注意，static不能修饰构造方法。 代码块 用static修饰的代码块优先与构造方法执行    native 用于扩展java程序的功能，告知JVM该方法在外部定义，一般配合。java在运行速度上比C++要慢，对访问操作系统底层的支持也不够好，因此可使用native声明某些方法是由其他语言实现的（如C++）。\n  volatile 数据同步。\n  synchronized 针对代码块的同步锁\n  transient 瞬时的。\n  strictfp 可用于类、接口或方法。使用strictfp关键字声明一个方法时，该方法中所有的float和double表达式都严格遵守FP-strict的限制，符合IEEE-754规范。\n  0x09 变量引用相关   super 用于表示基类对象。\n  this 用于表示当前对象。\n  0x10 其他关键字   assert 断言，在代码中捕捉一些假设，看我们的假设是否成立，如果假设不成立，即断言中的布尔表达式为false，则会停止运行程序，抛出AssertionError错误（前提是要先支持断言），断言也可看作是更高级的异常捕获，主要在于它引入了程序猿的先验。Eclipse、MyEclipse中默认关闭断言，可在偏好设置中修改VM参数进行开启。\n  enum 枚举。\n  0x11 问题   内部类\n  GC需要解决的问题：\n（1） 哪些对象需要被回收？\n（2） 何时回收这些对象？\n（3） 如何回收这些对象？\n  ","date":1542987065,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1542987065,"objectID":"6cfc4dc2a70eb2a0725e331cfe40a3a6","permalink":"https://coolgiserz.github.io/post/java-keywords-summary/","publishdate":"2018-11-23T23:31:05+08:00","relpermalink":"/post/java-keywords-summary/","section":"post","summary":"关键字的前世今生","tags":["关键字"],"title":"Java关键字相关知识点总结","type":"post"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"6d99026b9e19e4fa43d5aadf147c7176","permalink":"https://coolgiserz.github.io/contact/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/contact/","section":"","summary":"","tags":null,"title":"","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c1d17ff2b20dca0ad6653a3161942b64","permalink":"https://coolgiserz.github.io/people/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/people/","section":"","summary":"","tags":null,"title":"","type":"widget_page"}]