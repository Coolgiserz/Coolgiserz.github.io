<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python | CoolCats</title>
    <link>/category/python/</link>
      <atom:link href="/category/python/index.xml" rel="self" type="application/rss+xml" />
    <description>Python</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sun, 18 Jun 2023 09:02:27 +0800</lastBuildDate>
    <image>
      <url>/media/icon_hue03491371183284312b8b116a73ae5ab_79511_512x512_fill_lanczos_center_3.png</url>
      <title>Python</title>
      <link>/category/python/</link>
    </image>
    
    <item>
      <title>Python内置日志模块源码分析和进阶用法</title>
      <link>/post/python-logging-usage-and-extend/</link>
      <pubDate>Sun, 18 Jun 2023 09:02:27 +0800</pubDate>
      <guid>/post/python-logging-usage-and-extend/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;日志是在程序运行过程中进行事件追踪的方式，通过向程序引入日志模块可以使开发者方便地了解到特定的事件是否发生，以及事件发生时相关的信息。&lt;/p&gt;
&lt;p&gt;本文假定你已经了解日志模块的基本使用（如通常博客、教材所介绍），想要定制化拓展你的日志功能（如定制化的日志持久化，在日志中记录特定属性（区分于message）等），或许本文的部分内容会对你有帮助。&lt;/p&gt;
&lt;p&gt;本文介绍以下内容：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;python中内置的logging模块中关于日志记录的关键类设计（如日志事件对象LogRecord，日志处理类/接口Handler）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何将日志记录到数据库中（以MySQL为例）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何拓展日志事件记录字段&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何优雅地使用logging模块&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;源码分析&#34;&gt;源码分析&lt;/h2&gt;
&lt;h3 id=&#34;logging模块设计&#34;&gt;logging模块设计&lt;/h3&gt;
&lt;p&gt;从__all__这一特殊变量即可窥见logging模块有哪些主要的类与变量: Logger、Handler、Filter、Formatter、LogRecord等。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/python-logging-usage-and-extend/images/logging_hubc6be535caacc45bc8718786526cd277_157377_f69308afae4bf6fe8eed3b928dfd089f.webp 400w,
               /post/python-logging-usage-and-extend/images/logging_hubc6be535caacc45bc8718786526cd277_157377_1c0f211c5e03b599f4f79c33263f4493.webp 760w,
               /post/python-logging-usage-and-extend/images/logging_hubc6be535caacc45bc8718786526cd277_157377_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/python-logging-usage-and-extend/images/logging_hubc6be535caacc45bc8718786526cd277_157377_f69308afae4bf6fe8eed3b928dfd089f.webp&#34;
               width=&#34;760&#34;
               height=&#34;387&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;重要常量及其相关操作&#34;&gt;重要常量及其相关操作&lt;/h3&gt;
&lt;h4 id=&#34;日志级别&#34;&gt;日志级别&lt;/h4&gt;
&lt;p&gt;若干个正整数集合定义了我们在程序中常用的日志级别&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/python-logging-usage-and-extend/images/log_level_hu9bef11106bc193a0cd590e92650ac977_135766_4c2f52ea62661693ee95d4994592b58a.webp 400w,
               /post/python-logging-usage-and-extend/images/log_level_hu9bef11106bc193a0cd590e92650ac977_135766_fee3dbb37c1fb45d51d52e6c0e87e70f.webp 760w,
               /post/python-logging-usage-and-extend/images/log_level_hu9bef11106bc193a0cd590e92650ac977_135766_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/python-logging-usage-and-extend/images/log_level_hu9bef11106bc193a0cd590e92650ac977_135766_4c2f52ea62661693ee95d4994592b58a.webp&#34;
               width=&#34;760&#34;
               height=&#34;431&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/python-logging-usage-and-extend/images/log_level_name_hu667f4dbf1ec23e6cfdec5f7e343ca129_96914_2754a2e48e65986ba563668aea4905bb.webp 400w,
               /post/python-logging-usage-and-extend/images/log_level_name_hu667f4dbf1ec23e6cfdec5f7e343ca129_96914_6b7d4d3c41d11a6bfb2705456e7e0ae4.webp 760w,
               /post/python-logging-usage-and-extend/images/log_level_name_hu667f4dbf1ec23e6cfdec5f7e343ca129_96914_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/python-logging-usage-and-extend/images/log_level_name_hu667f4dbf1ec23e6cfdec5f7e343ca129_96914_2754a2e48e65986ba563668aea4905bb.webp&#34;
               width=&#34;760&#34;
               height=&#34;732&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;模块架构图&#34;&gt;模块架构图&lt;/h3&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/python-logging-usage-and-extend/images/log_data_flow_hu6274e8f9f952444ad4e548d4de5bbeca_260241_a82725665d1d23059475521047c93d10.webp 400w,
               /post/python-logging-usage-and-extend/images/log_data_flow_hu6274e8f9f952444ad4e548d4de5bbeca_260241_76b0e1c8cb6b1b290fdcc3fec47cdcfb.webp 760w,
               /post/python-logging-usage-and-extend/images/log_data_flow_hu6274e8f9f952444ad4e548d4de5bbeca_260241_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/python-logging-usage-and-extend/images/log_data_flow_hu6274e8f9f952444ad4e548d4de5bbeca_260241_a82725665d1d23059475521047c93d10.webp&#34;
               width=&#34;760&#34;
               height=&#34;589&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;logrecord日志事件对象&#34;&gt;LogRecord:日志事件对象&lt;/h3&gt;
&lt;p&gt;LogRecord类表示一个被记录的事件&lt;br&gt;
LogRecord实例会在需要记录某些东西时被创建，包含需要记录事件的所有相关信息。日志的主要信息在于msg和args,LogRecord实例也包括了实例被创建的时间、创建过程被调用 的源代码模块、文件名、行数等信息。 &lt;br&gt;
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/python-logging-usage-and-extend/images/logrecord_hu8674e2f76785f016a54448c27384beaa_213741_e588c56d01720de6d75abd12478ceb36.webp 400w,
               /post/python-logging-usage-and-extend/images/logrecord_hu8674e2f76785f016a54448c27384beaa_213741_6dc2b70a6490bf6b8274f784f40777f4.webp 760w,
               /post/python-logging-usage-and-extend/images/logrecord_hu8674e2f76785f016a54448c27384beaa_213741_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/python-logging-usage-and-extend/images/logrecord_hu8674e2f76785f016a54448c27384beaa_213741_e588c56d01720de6d75abd12478ceb36.webp&#34;
               width=&#34;760&#34;
               height=&#34;555&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;handler-日志处理类&#34;&gt;Handler: 日志处理类&lt;/h3&gt;
&lt;p&gt;Handler类的实例负责把日志时间分发到特定的目的地&lt;/p&gt;
&lt;p&gt;Handler类 作为一个接口，其应该实现的功能为：把日志时间分发到特定的目的地。Handler可以选择性地使用格式器（Formatter）实例将日志记录格式化为期望的样式，默认情况下只记录原始记录信息（record.message）&lt;/p&gt;
&lt;h3 id=&#34;并发安全性设计&#34;&gt;并发安全性设计&lt;/h3&gt;
&lt;h2 id=&#34;数据库持久化拓展&#34;&gt;数据库持久化拓展&lt;/h2&gt;
&lt;h2 id=&#34;设计模式推荐&#34;&gt;设计模式推荐&lt;/h2&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://realpython.com/python-logging-source-code/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Python Logging: A Stroll Through the Source Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/howto/logging.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Logging HOWTO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/python/cpython/tree/d730719b094cb006711b1cd546927b863c173b31/Lib/logging&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CPython source code of logging module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Windows Server间的通信: 基于Python-Socket编程的实现</title>
      <link>/post/socket-communication-between-two-machine/</link>
      <pubDate>Sat, 10 Jun 2023 16:57:59 +0800</pubDate>
      <guid>/post/socket-communication-between-two-machine/</guid>
      <description>&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt;
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt;
&lt;p&gt;&lt;em&gt;目录&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#0x00-%E5%9C%BA%E6%99%AF%E6%8F%8F%E8%BF%B0&#34;&gt;0x00 场景描述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#0x01-%E5%AE%9E%E7%8E%B01%E5%9F%BA%E4%BA%8Esocket%E5%AE%A2%E6%88%B7%E7%AB%AF-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%AE%9E%E7%8E%B0&#34;&gt;0x01 实现1：基于Socket客户端-服务器的实现&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%88%9B%E5%BB%BA%E6%B5%8B%E8%AF%95%E7%94%A8%E8%84%9A%E6%9C%AC&#34;&gt;创建测试用脚本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%AE%9E%E7%8E%B0&#34;&gt;服务端实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%9E%E7%8E%B0&#34;&gt;客户端实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%B0%8F%E7%BB%93&#34;&gt;小结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#0x02-%E6%9B%B4%E5%A4%9A%E6%80%9D%E8%B7%AF&#34;&gt;0x02 更多思路&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#0x03-%E7%9F%A5%E8%AF%86%E7%82%B9&#34;&gt;0x03 知识点&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#socket&#34;&gt;Socket&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#socket%E7%9A%84%E6%A6%82%E5%BF%B5&#34;&gt;Socket的概念&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#socket%E5%9C%B0%E5%9D%80%E5%AE%B6%E6%97%8F&#34;&gt;Socket地址家族&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#socket%E7%9A%84%E7%B1%BB%E5%9E%8B&#34;&gt;Socket的类型&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%9D%A2%E5%90%91%E8%BF%9E%E6%8E%A5%E7%9A%84%E5%A5%97%E6%8E%A5%E5%AD%97&#34;&gt;面向连接的套接字&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%97%A0%E8%BF%9E%E6%8E%A5%E7%9A%84%E5%A5%97%E6%8E%A5%E5%AD%97&#34;&gt;无连接的套接字&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%99%9A%E6%8B%9F%E7%94%B5%E8%B7%AF%E7%B1%BB%E5%9E%8B%E8%BF%9E%E6%8E%A5-vs-%E7%94%A8%E6%88%B7%E6%95%B0%E6%8D%AE%E6%8A%A5%E7%B1%BB%E5%9E%8B%E8%BF%9E%E6%8E%A5&#34;&gt;虚拟电路类型连接 vs 用户数据报类型连接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#socketserver&#34;&gt;socketserver&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%9F%BA%E4%BA%8Esocketserver%E7%9A%84socket%E6%9C%8D%E5%8A%A1%E5%99%A8tcp%E5%AE%9E%E7%8E%B0%E7%A4%BA%E4%BE%8B&#34;&gt;基于socketserver的socket服务器（TCP）实现示例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#socket%E5%AE%A2%E6%88%B7%E7%AB%AFtcp%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81&#34;&gt;socket客户端（TCP）示例代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#subprocesscheck_output&#34;&gt;subprocess.check_output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ssltls%E5%8D%8F%E8%AE%AE&#34;&gt;SSL/TLS协议&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%8E%9F%E7%90%86&#34;&gt;原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%AE%9E%E8%B7%B5-%E5%9F%BA%E4%BA%8Essl%E4%BF%9D%E6%8A%A4%E7%9A%84socket%E9%80%9A%E4%BF%A1%E6%9C%8D%E5%8A%A1&#34;&gt;实践: 基于SSL保护的socket通信服务&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%9F%BA%E4%BA%8Eopenssl%E7%94%9F%E6%88%90%E8%AF%81%E4%B9%A6%E6%96%87%E4%BB%B6%E5%92%8C%E5%AF%86%E9%92%A5%E6%9C%8D%E5%8A%A1%E7%AB%AF&#34;&gt;基于openssl生成证书文件和密钥(服务端)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%AE%9E%E7%8E%B0-1&#34;&gt;服务端实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%9E%E7%8E%B0-1&#34;&gt;客户端实现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%9F%BA%E4%BA%8Ewireshark%E5%88%86%E6%9E%90%E6%95%B0%E6%8D%AE%E5%8C%85&#34;&gt;基于Wireshark分析数据包&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%9C%AC%E5%9C%B0%E5%9B%9E%E7%8E%AF%E6%95%B0%E6%8D%AE%E5%8C%85%E6%8A%93%E5%8F%96&#34;&gt;本地回环数据包抓取&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%97%A0ssl%E7%9A%84socket%E9%80%9A%E4%BF%A1&#34;&gt;无SSL的socket通信&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%9F%BA%E4%BA%8Essl%E5%8D%8F%E8%AE%AE%E4%BF%9D%E6%8A%A4%E7%9A%84socket%E9%80%9A%E4%BF%A1&#34;&gt;基于SSL协议保护的socket通信&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ssh%E5%8D%8F%E8%AE%AE&#34;&gt;SSH协议&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#0x04-%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB&#34;&gt;0x04 扩展阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt;
&lt;h2 id=&#34;0x00-场景描述&#34;&gt;0x00 场景描述&lt;/h2&gt;
&lt;p&gt;工作中遇到一个需求，有两台windows server，我们希望在一台server A中通知另一台server B执行Python程序，并将结果返回到服务器A中。&lt;/p&gt;
&lt;h2 id=&#34;0x01-实现1基于socket客户端-服务器的实现&#34;&gt;0x01 实现1：基于Socket客户端-服务器的实现&lt;/h2&gt;
&lt;p&gt;思路：在server B中实现一个Socket Server，开放指定端口，等待客户端（Server A）的请求，并进行数据交换：客户端向服务端发送python脚本执行命令：&lt;Python Executable&gt; &lt;Python Script&gt; &lt;Args&gt;。&lt;/p&gt;
&lt;h3 id=&#34;创建测试用脚本&#34;&gt;创建测试用脚本&lt;/h3&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/task_hu7c6b90c2b95db9f63f03ba23d8a4e1a1_7594_3626fe19e79c4188dd3fdc224dcf1f9c.webp 400w,
               /post/socket-communication-between-two-machine/images/task_hu7c6b90c2b95db9f63f03ba23d8a4e1a1_7594_5fe69cc0a5eb4302c60722fc567f3d9f.webp 760w,
               /post/socket-communication-between-two-machine/images/task_hu7c6b90c2b95db9f63f03ba23d8a4e1a1_7594_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/task_hu7c6b90c2b95db9f63f03ba23d8a4e1a1_7594_3626fe19e79c4188dd3fdc224dcf1f9c.webp&#34;
               width=&#34;410&#34;
               height=&#34;140&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;exec/task.py&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;argparse&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;task_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;you have successfully run task &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;task_id&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;print: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argparse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;--task_id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;task&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse_args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;task&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;No arg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;called from server &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;task_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;task&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;服务端实现&#34;&gt;服务端实现&lt;/h3&gt;
&lt;p&gt;server.py&lt;/p&gt;
&lt;p&gt;功能：在本地（127.0.0.1）的12138端口创建Socket服务 （使用AF_INET地址家族，TCP类型套接字），监听来自客户端的信息（命令），通过subprocess.check_output方法执行命令并得到返回结果。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;socket&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;subprocess&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctime&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;BUF_SIZE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SocketServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12138&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;# 为服务绑定主机地址和端口号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;listen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;server listening...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;# 等待客户端连接（阻塞，直到收到客户端的连接请求）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;connected from &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BUF_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;# refer to https://docs.python.org/3/library/subprocess.html#subprocess.check_output&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;# socket.sendall的参数是byte对象，需要将字符串通过encode方法转成byte对象&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;]-&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CalledProcessError&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;# raise RuntimeError(&amp;#34;command &amp;#39;{}&amp;#39; return with error (code {}): {}&amp;#34;.format(e.cmd, e.returncode, e.output))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;command &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39; return with error (code &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;): &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;returncode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SocketServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注：该socket server的实现在一个无限循环中，如果要实现socket服务关闭的功能，需要调用socket.close方法关闭socket服务器连接，释放内存。&lt;/p&gt;
&lt;p&gt;在windows中，可通过netstat命令查看对应端口是否已有对应服务&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/netstat_hu41b36796a7fc02953eecd9350dbb5685_29999_b4916fd2f4d9fb7de4fe0119e34ac5a1.webp 400w,
               /post/socket-communication-between-two-machine/images/netstat_hu41b36796a7fc02953eecd9350dbb5685_29999_c272f3bb2b4f6270fffa0aacb095a2ff.webp 760w,
               /post/socket-communication-between-two-machine/images/netstat_hu41b36796a7fc02953eecd9350dbb5685_29999_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/netstat_hu41b36796a7fc02953eecd9350dbb5685_29999_b4916fd2f4d9fb7de4fe0119e34ac5a1.webp&#34;
               width=&#34;760&#34;
               height=&#34;136&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;客户端实现&#34;&gt;客户端实现&lt;/h3&gt;
&lt;p&gt;client.py&lt;/p&gt;
&lt;p&gt;功能：向服务地址和端口发起socket连接请求，发送待执行命令（byte），返回执行结果&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;socket&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;send_command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;host&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12138&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect_ex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;family&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;python --version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;python ..\exec&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;task.py --task_id 1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;python ..\exec&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;task.py --task_id 10&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;先运行server.py，再运行client.py，输出结果：&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/effect_hub654d5448d6eb63459f9819b75ad2ebc_76403_19a78eb650be3f29b1b7c7ad9f880f4d.webp 400w,
               /post/socket-communication-between-two-machine/images/effect_hub654d5448d6eb63459f9819b75ad2ebc_76403_847bb3418e96c79355611080ef4c47d7.webp 760w,
               /post/socket-communication-between-two-machine/images/effect_hub654d5448d6eb63459f9819b75ad2ebc_76403_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/effect_hub654d5448d6eb63459f9819b75ad2ebc_76403_19a78eb650be3f29b1b7c7ad9f880f4d.webp&#34;
               width=&#34;760&#34;
               height=&#34;273&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;此时服务器端控制台输出如下：&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/server_hu7d614aa2ca7aa11d2d485091bf8c021f_80359_b40f037468d0765673bcd0d62d7877dd.webp 400w,
               /post/socket-communication-between-two-machine/images/server_hu7d614aa2ca7aa11d2d485091bf8c021f_80359_8e2b7f847b603bb81e02d391313b0430.webp 760w,
               /post/socket-communication-between-two-machine/images/server_hu7d614aa2ca7aa11d2d485091bf8c021f_80359_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/server_hu7d614aa2ca7aa11d2d485091bf8c021f_80359_b40f037468d0765673bcd0d62d7877dd.webp&#34;
               width=&#34;760&#34;
               height=&#34;234&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;注：测试代码仅实现远程命令执行，当生产环境开放类似功能给客户端使用时，尽量限制可执行命令权限，避免出现安全隐患。&lt;/p&gt;
&lt;h3 id=&#34;小结&#34;&gt;小结&lt;/h3&gt;
&lt;p&gt;实现1虽然给出两个windows server间通知脚本执行、数据交换的功能，但没有考虑通信的安全性，服务端没有对客户端进行身份验证 ，传输没有经过加密等，这样的服务不适合开放。如果要完善Socket服务实现（安全性角度），可以考虑如下方面 ：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;基于SSL/TLS协议实现对Socket服务的加密通信&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用Token验证&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用SSH隧道对Socket服务进行 加密保护&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;0x02-更多思路&#34;&gt;0x02 更多思路&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;基于HTTP请求: 在B服务器上部署一个Web服务器，在A服务器上向B服务器发送HTTP请求，请求中添加需要执行的Python脚本路径或者命令、参数，B服务器上的Web服务器解析请求并执行响应命令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基于SSH服务：在B服务器上安装配置SSH服务并设置允许远程登录，在A服务器上使用诸如paramiko的库来连接到B服务器并执行Python命令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基于消息队列：使用一个消息队列系统，如RabbitMQ或ZeroMQ，将消息从A服务器发送到消息队列，B服务器上监听消息队列并在接收到执行时执行需要的Python脚本或命令。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;0x03-知识点&#34;&gt;0x03 知识点&lt;/h2&gt;
&lt;h3 id=&#34;socket&#34;&gt;Socket&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/library/socket.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://docs.python.org/3/library/socket.html&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;socket的概念&#34;&gt;Socket的概念&lt;/h4&gt;
&lt;p&gt;Socket是一种计算机网络中的一种通信机制，用于实现不同进程或不同计算机之间的数据传输，中文名叫“套接字”。通过创建Socket对象并指定相应的地址和端口，进程可以与其他进程建立网络连接，进行数据交换和通信。网络编程中，Socket是一种统一的接口，其提供一种通信方式让两方或多方之间可以进行任意类型的数据传输。&lt;/p&gt;
&lt;h4 id=&#34;socket地址家族&#34;&gt;Socket地址家族&lt;/h4&gt;
&lt;p&gt;AF表示地址家族（Address Family），部分系统会将地址家族表示为域（domain）协议家族（protocol family）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AF_UNIX&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AF_LOCAL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AF_INET&lt;/p&gt;
&lt;p&gt;基于网络的地址家族。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AF_INET6&lt;/p&gt;
&lt;p&gt;基于Ipv6（第6版因特网协议）寻址。&lt;/p&gt;
&lt;p&gt;如实现1，如果要使用IPv6，则客户端和服务端的代码需要修改以下部分 ：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;send_command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# host = &amp;#39;127.0.0.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# CHANGE: 本地主机的IPv6地址 ::1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;host&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;::1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12138&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# CHANGE: 地址家族参数设置为socket.AF_INET6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect_ex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;family&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SocketServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;::1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12138&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;# CHANGE: 地址家族参数设置为socket.AF_INET6:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;# 为服务绑定主机地址和端口号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;listen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/udp_huf7015e7dc301efafd92d6cac58e7e978_56492_ae95330c6798b5bd15fa466ad741016c.webp 400w,
               /post/socket-communication-between-two-machine/images/udp_huf7015e7dc301efafd92d6cac58e7e978_56492_5577f6cb2e2ef755188fc16d722898c6.webp 760w,
               /post/socket-communication-between-two-machine/images/udp_huf7015e7dc301efafd92d6cac58e7e978_56492_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/udp_huf7015e7dc301efafd92d6cac58e7e978_56492_ae95330c6798b5bd15fa466ad741016c.webp&#34;
               width=&#34;682&#34;
               height=&#34;470&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AF_NETLINK&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AF_TIPC&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;socket的类型&#34;&gt;Socket的类型&lt;/h4&gt;
&lt;p&gt;存在两种风格的套接字：面向连接的套接字和无连接的套接字。&lt;/p&gt;
&lt;h5 id=&#34;面向连接的套接字&#34;&gt;面向连接的套接字&lt;/h5&gt;
&lt;p&gt;该类型连接在通信前需要先建立连接，类似使用电话系统给朋友打电话，该类型的通信也被成为&lt;strong&gt;虚拟电路&lt;/strong&gt;或&lt;strong&gt;流套接字&lt;/strong&gt;（Python中对此类套接字的常量命名为socket.SOCK_STREAM）；&lt;/p&gt;
&lt;p&gt;面向连接的通信提供 序列化、可靠、不重复的数据交付 ，每条消息可以拆分成多个片段 ，每一个消息 片段可以确保到达目的地 并按顺序组合成完整消息传递给正在等待的程序 。&lt;/p&gt;
&lt;p&gt;实现这种连接类型需要一种协议，主要采用传输控制协议（Transport Control Protocol，TCP协议），由于 AF_INET家族的套接字通常使用IP协议寻找网络中的主机，所以整个系统常常结合TCP协议和IP协议进行工作 。&lt;/p&gt;
&lt;h5 id=&#34;无连接的套接字&#34;&gt;无连接的套接字&lt;/h5&gt;
&lt;p&gt;无连接套接字常被称为数据报类型的套接字，该类型连接在通信开始之前不需要建立连接，传输过程中无法保证消息的顺序性、可靠性和重复性 。&lt;/p&gt;
&lt;p&gt;实现该类型连接的主要协议是用户数据报协议（User Datagram Protocol)，在python中使用命名为socket.SOCK_DGRAM，由于无连接套接字也使用IP协议寻找网络中 的主机，因此该类系统也被称为UDP/IP系统。&lt;/p&gt;
&lt;p&gt;基于Python实现一个简单的基于UDP协议的Socket服务器如下(udp_server.py)：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;socket&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctime&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ADDR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;::1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PORT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12135&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;BUFSIZE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;UDPServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;UDP服务器&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;udp_socket&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SOCK_DGRAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;udp_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Server is waiting data...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;udp_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvfrom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BUFSIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;udp_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;] &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;}&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;received &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; from and returned to: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;repr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;finally&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;udp_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;UDPServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ADDR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PORT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;再实现一个udp客户端（udp_client.py)与服务端进行通信&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;socket&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;HOST&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;::1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PORT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12135&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;BUFSIZE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;udp_client&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SOCK_DGRAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;udp_client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HOST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PORT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;udp_client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvfrom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BUFSIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;finally&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;udp_client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以注意到，udp服务端不需要监听客户端连接并维持一个客户端的socket连接对象，只需要等待数据、发送数据即可。&lt;/p&gt;
&lt;h5 id=&#34;虚拟电路类型连接-vs-用户数据报类型连接&#34;&gt;虚拟电路类型连接 vs 用户数据报类型连接&lt;/h5&gt;
&lt;p&gt;前者提供对数据传输可靠性、顺序性的保证，但维护“虚拟电路”需要一定开销，传输效率相对较低；后者虽然不可靠，但不需要维护“虚拟电路”，低廉的成本及更好的性能适用于某些对实时性要求高但准确性要求低的程序，如DNS服务器、音视频即时通信等。&lt;/p&gt;
&lt;h3 id=&#34;socketserver&#34;&gt;socketserver&lt;/h3&gt;
&lt;p&gt;socketserver是一个socket编程的高级模块，其对socket库进行了封装，可以简化socket编程中一些样板代码。&lt;/p&gt;
&lt;h4 id=&#34;基于socketserver的socket服务器tcp实现示例&#34;&gt;基于socketserver的socket服务器（TCP）实现示例&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# tcp_server.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;使用socket高级模块socketserver
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;socketserver&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TCPServer&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                          &lt;span class=&#34;n&#34;&gt;StreamRequestHandler&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SRH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                          &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctime&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;HOST&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;127.0.0.1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# HOST = &amp;#34;::1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PORT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12138&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ADDR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HOST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PORT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MyRequestHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SRH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        当接收到来自客户端的消息，就会调用handle方法
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        :return:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;connected from: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client_address&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;] &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;readline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 基于给定的主机信息和请求处理类创建TCP服务器&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;tcp_server&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;server_address&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ADDR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RequestHandlerClass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MyRequestHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;waiting for connection...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;tcp_server&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serve_forever&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;socket客户端tcp示例代码&#34;&gt;socket客户端（TCP）示例代码&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# tcp_client.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;socket&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;HOST&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;127.0.0.1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PORT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12138&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ADDR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HOST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PORT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ADDR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;# \r\n是行终止符，由于处理程序类对待套接字通信像对待文件一样所以需要行终止符才能让服务器完成数据读取&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\r\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;# client_socket.send((&amp;#34;%s\r\n&amp;#34;%data).encode())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;subprocesscheck_output&#34;&gt;subprocess.check_output&lt;/h3&gt;
&lt;p&gt;subprocess.check_output是Python内置的一个标准库函数，用于执行外部命令并返回命令结果的输出内容。该函数可以在Python中运行任何一条系统命令或子进程，其使用方法与subprocess.call、subprocess.Popen类似。&lt;/p&gt;
&lt;p&gt;注意：subprocess.check_output是一个阻塞函数，如果执行的命令耗时较长，会阻塞程序的执行，因此如果命令需要长时间执行，推荐使用subprocess.Popen。&lt;/p&gt;
&lt;h3 id=&#34;ssltls协议&#34;&gt;SSL/TLS协议&lt;/h3&gt;
&lt;h4 id=&#34;原理&#34;&gt;原理&lt;/h4&gt;
&lt;p&gt;SSL（Secure Socket Layer），安全套接字层。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc785811%28v=ws.10%29?redirectedfrom=MSDN&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SSL/TLS in Detail | Microsoft Learn&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;实践-基于ssl保护的socket通信服务&#34;&gt;实践: 基于SSL保护的socket通信服务&lt;/h4&gt;
&lt;h5 id=&#34;基于openssl生成证书文件和密钥服务端&#34;&gt;基于openssl生成证书文件和密钥(服务端)&lt;/h5&gt;
&lt;p&gt;openssl提供了通用的密码学库，包括了对称加密、非对称加密和消息摘要等各种密码学算法的实现，其应用范围非常广泛，目前可以用于安全通信、数字签名、证书颁发以及相应的密钥管理功能等。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/openssl_hudbdac26a98a35381d87907ae9d8924f3_104501_f3a633c1ab265a77fa15bbeb2d18fff6.webp 400w,
               /post/socket-communication-between-two-machine/images/openssl_hudbdac26a98a35381d87907ae9d8924f3_104501_c88676a2793d333ed0742173e78e34da.webp 760w,
               /post/socket-communication-between-two-machine/images/openssl_hudbdac26a98a35381d87907ae9d8924f3_104501_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/openssl_hudbdac26a98a35381d87907ae9d8924f3_104501_f3a633c1ab265a77fa15bbeb2d18fff6.webp&#34;
               width=&#34;760&#34;
               height=&#34;372&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;生成私钥文件server.key&lt;/p&gt;
&lt;p&gt;server.key 是服务器端 SSL/TLS 通信的私钥文件。在 SSL 连接建立时，SSL/TLS 协议需要使用一种加密密钥来保护通信数据的机密性和完整性，而密钥的安全性取决于私钥的保护。私钥被用于加密数据、解密数据以及创建和验证数字签名，只有获得私钥才能进行这些操作。通过openssl可以指定算法生成私钥文件，私钥格式包括 RSA、DSA 和 ECDSA，以下示例指定RSA算法生成私钥文件。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl genpkey -algorithm RSA -out server.key  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;生成的server.key样式如下：
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/server_key_hu7b17f77539eb3d3f091a0d2b96a6f53a_347952_0ccada7b3aef8ac3e1265e8a82dfb157.webp 400w,
               /post/socket-communication-between-two-machine/images/server_key_hu7b17f77539eb3d3f091a0d2b96a6f53a_347952_8dcccd84ce9978b92c7e418bcda389c5.webp 760w,
               /post/socket-communication-between-two-machine/images/server_key_hu7b17f77539eb3d3f091a0d2b96a6f53a_347952_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/server_key_hu7b17f77539eb3d3f091a0d2b96a6f53a_347952_0ccada7b3aef8ac3e1265e8a82dfb157.webp&#34;
               width=&#34;733&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;RSA算法的可靠性由极大整数因数分解的难度保证，目前还没有任何可靠的攻击RSA算法的方式，只有短RSA钥匙才可能被暴力破解。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;生成证书签名请求文件server.csr&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl req -new -key server.key -out server.csr
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;该命令会使用上一步中生成的私钥文件来创建一个证书签名请求 (CSR)，其中包含您的站点的信息。您可以在执行此命令需要提供站点信息，或使用默认值。
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/csr_file_hufa7604259cb6665f7d8a448e731fbc0a_149210_2b548a4e1a12b9c72ad509374b4d67fe.webp 400w,
               /post/socket-communication-between-two-machine/images/csr_file_hufa7604259cb6665f7d8a448e731fbc0a_149210_479681a295e3ffbe4a8ee169233244ed.webp 760w,
               /post/socket-communication-between-two-machine/images/csr_file_hufa7604259cb6665f7d8a448e731fbc0a_149210_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/csr_file_hufa7604259cb6665f7d8a448e731fbc0a_149210_2b548a4e1a12b9c72ad509374b4d67fe.webp&#34;
               width=&#34;760&#34;
               height=&#34;417&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

生成的证书签名请求文件如下：
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/server_csr_hu389a30546ef374062b576fe8c6c82771_201038_a338ac1ea5b7a0bf788d00a7a48d1eb6.webp 400w,
               /post/socket-communication-between-two-machine/images/server_csr_hu389a30546ef374062b576fe8c6c82771_201038_e68de2cf413ac0ba4e7f760d64a203c7.webp 760w,
               /post/socket-communication-between-two-machine/images/server_csr_hu389a30546ef374062b576fe8c6c82771_201038_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/server_csr_hu389a30546ef374062b576fe8c6c82771_201038_a338ac1ea5b7a0bf788d00a7a48d1eb6.webp&#34;
               width=&#34;760&#34;
               height=&#34;562&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用csr文件和私钥文件生成证书文件server.crt
将csr文件和私钥文件合并生成一个有效期365天的x509证书&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;证书文件样式如下：
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/server_crt_file_hu1828966197a32a721d63310344cbbfb4_302834_89dc94b31a969bb8916a16ce19c10f27.webp 400w,
               /post/socket-communication-between-two-machine/images/server_crt_file_hu1828966197a32a721d63310344cbbfb4_302834_447c77d2747942e351ee6159a2174f9a.webp 760w,
               /post/socket-communication-between-two-machine/images/server_crt_file_hu1828966197a32a721d63310344cbbfb4_302834_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/server_crt_file_hu1828966197a32a721d63310344cbbfb4_302834_89dc94b31a969bb8916a16ce19c10f27.webp&#34;
               width=&#34;709&#34;
               height=&#34;540&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;生成的文件通常存储在管理SSL/TLS通信的服务器上供服务器使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;服务端实现-1&#34;&gt;服务端实现&lt;/h5&gt;
&lt;p&gt;通过ssl库实现对socket的加密，代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ssl_server.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ssl&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;socket&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 服务器地址、端口以及协议类型配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;server_address&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12138&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ssl_context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ssl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SSLContext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ssl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PROTOCOL_TLS_SERVER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ssl_context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_cert_chain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;certfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;server.crt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;keyfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;server.key&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 创建并配置套接字&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;server_socket&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;server_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;server_address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;server_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;listen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 循环等待连接请求并处理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client_address&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;server_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ssl_socket&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ssl_context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wrap_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;server_side&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Got connection from &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client_address&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;received_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ssl_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;received_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;received_message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;received_data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Received message: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;received_message&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;response_message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Received message: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;received_message&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;ssl_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;response_message&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ssl_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;客户端实现-1&#34;&gt;客户端实现&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ssl&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;socket&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ssl_socket&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ssl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wrap_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ssl_version&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ssl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PROTOCOL_TLSv1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ciphers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;HIGH&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ssl_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;127.0.0.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12138&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;This is a message encrypted by SSL&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ssl_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ssl_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;基于wireshark分析数据包&#34;&gt;基于Wireshark分析数据包&lt;/h4&gt;
&lt;h5 id=&#34;本地回环数据包抓取&#34;&gt;本地回环数据包抓取&lt;/h5&gt;
&lt;p&gt;tcpdump命令可以监视网络中传输的数据包，支持指定协议、目的ip、源ip、源端口、目的端口等条件过两次数据包，可用参数如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;-i：指定监听的网络接口。
-n：不将地址转换为名称。
-X：将数据包以十六进制和ASCII码的形式打印出来。
-s：指定获取数据包的大小。
-c：指定捕获的数据包数量。
-w：将捕获到的数据包存储在文件中。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;因此，可通过如下命令监听本地回环网络、tcp协议、端口为12138的数据包，并将数据包写入到12138.pcap（此文件可用wireshark打开分析）。
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/tcpdump_ord_hu9ea4773db1bed381f188cbf34203df63_47607_5b9fca473104ccb2545cf9b61bbb3b7a.webp 400w,
               /post/socket-communication-between-two-machine/images/tcpdump_ord_hu9ea4773db1bed381f188cbf34203df63_47607_1932b40e3375f7f807c21e74f7cc2d09.webp 760w,
               /post/socket-communication-between-two-machine/images/tcpdump_ord_hu9ea4773db1bed381f188cbf34203df63_47607_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/tcpdump_ord_hu9ea4773db1bed381f188cbf34203df63_47607_5b9fca473104ccb2545cf9b61bbb3b7a.webp&#34;
               width=&#34;760&#34;
               height=&#34;100&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

对于ssl socket通信的数据包抓取保存如下：
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/tcpdump_ssl_hu28e4ce3d763b5654bae0604758a92423_43058_98db395cbe41eb1330b0f19bfa172953.webp 400w,
               /post/socket-communication-between-two-machine/images/tcpdump_ssl_hu28e4ce3d763b5654bae0604758a92423_43058_44f2a8d83a87316846a80fb0c848951b.webp 760w,
               /post/socket-communication-between-two-machine/images/tcpdump_ssl_hu28e4ce3d763b5654bae0604758a92423_43058_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/tcpdump_ssl_hu28e4ce3d763b5654bae0604758a92423_43058_98db395cbe41eb1330b0f19bfa172953.webp&#34;
               width=&#34;760&#34;
               height=&#34;80&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h5 id=&#34;无ssl的socket通信&#34;&gt;无SSL的socket通信&lt;/h5&gt;
&lt;p&gt;从socket客户端发送到socket服务端的数据包(50298-&amp;gt;12138)，可以看到，发送的数据以明文方式传输。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/tcp_src2dst_hu2626e9a562f0ac926376ff645a269aaf_702802_a7e47fed097808e9b39dbfcda5895cac.webp 400w,
               /post/socket-communication-between-two-machine/images/tcp_src2dst_hu2626e9a562f0ac926376ff645a269aaf_702802_25217ad7c793bad747cdb13d0933aade.webp 760w,
               /post/socket-communication-between-two-machine/images/tcp_src2dst_hu2626e9a562f0ac926376ff645a269aaf_702802_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/tcp_src2dst_hu2626e9a562f0ac926376ff645a269aaf_702802_a7e47fed097808e9b39dbfcda5895cac.webp&#34;
               width=&#34;760&#34;
               height=&#34;391&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;从socket服务器发送到socket客户端的数据包(12138-&amp;gt;50298)：
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/tcp_ser2cli_hu41cb06eab3b2e1c5f91e3b3c2d319446_575927_111fd5df9f19d945ca6d8ac6e5e87341.webp 400w,
               /post/socket-communication-between-two-machine/images/tcp_ser2cli_hu41cb06eab3b2e1c5f91e3b3c2d319446_575927_e99d2e9134b293cb70cdf93cd752969a.webp 760w,
               /post/socket-communication-between-two-machine/images/tcp_ser2cli_hu41cb06eab3b2e1c5f91e3b3c2d319446_575927_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/tcp_ser2cli_hu41cb06eab3b2e1c5f91e3b3c2d319446_575927_111fd5df9f19d945ca6d8ac6e5e87341.webp&#34;
               width=&#34;760&#34;
               height=&#34;461&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h5 id=&#34;基于ssl协议保护的socket通信&#34;&gt;基于SSL协议保护的socket通信&lt;/h5&gt;
&lt;p&gt;经ssl协议保护的数据包，经过加密而难以看出其中意义。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/ssl_server_hu4abb8e02e666ecd02056fbe6ae58f5a6_92857_b0938a6ddd53c8f5eaab6b782197c6bc.webp 400w,
               /post/socket-communication-between-two-machine/images/ssl_server_hu4abb8e02e666ecd02056fbe6ae58f5a6_92857_aa230a4c99541832ee12cb79cc5379cd.webp 760w,
               /post/socket-communication-between-two-machine/images/ssl_server_hu4abb8e02e666ecd02056fbe6ae58f5a6_92857_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/ssl_server_hu4abb8e02e666ecd02056fbe6ae58f5a6_92857_b0938a6ddd53c8f5eaab6b782197c6bc.webp&#34;
               width=&#34;760&#34;
               height=&#34;194&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/tls_socket_hudf0cb0a6219361b8ee2ed4312b614b13_1126580_4caaeab8d6ff2b1bed90857527ff3130.webp 400w,
               /post/socket-communication-between-two-machine/images/tls_socket_hudf0cb0a6219361b8ee2ed4312b614b13_1126580_7ceb9225f198a0dcdeec5b3d6ae5974b.webp 760w,
               /post/socket-communication-between-two-machine/images/tls_socket_hudf0cb0a6219361b8ee2ed4312b614b13_1126580_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/tls_socket_hudf0cb0a6219361b8ee2ed4312b614b13_1126580_4caaeab8d6ff2b1bed90857527ff3130.webp&#34;
               width=&#34;760&#34;
               height=&#34;410&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;注：要在wireshark中查看TLS协议，需要进行一定配置，默认情况下支持TLS协议解析，但如果发现不支持，可以查看wireshark配置文件中的disabled_protos看是否禁用了TLS协议，若发现disabled_protos中有tls，移除之并重启wireshark即可分析数据包中的额TLS层。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/socket-communication-between-two-machine/images/wireshark_enable_hu1a273555546b9d622dbd6588051aff72_118731_7772c2909e44492b2caa362a8a9213ef.webp 400w,
               /post/socket-communication-between-two-machine/images/wireshark_enable_hu1a273555546b9d622dbd6588051aff72_118731_9db9acc4d5870fbcef5d829584148588.webp 760w,
               /post/socket-communication-between-two-machine/images/wireshark_enable_hu1a273555546b9d622dbd6588051aff72_118731_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;/post/socket-communication-between-two-machine/images/wireshark_enable_hu1a273555546b9d622dbd6588051aff72_118731_7772c2909e44492b2caa362a8a9213ef.webp&#34;
               width=&#34;760&#34;
               height=&#34;189&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;ssh协议&#34;&gt;SSH协议&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.fabfile.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.fabfile.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.paramiko.org/en/stable/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Welcome to Paramiko’s documentation! — Paramiko documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x04-扩展阅读&#34;&gt;0x04 扩展阅读&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;众所周知的端口号列表: &lt;a href=&#34;http://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Service Name and Transport Protocol Port Number Registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ruanyifeng.com/blog/2014/02/ssl_tls.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SSL/TLS协议运行机制的概述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc5246&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Transport Layer Security (TLS) Protocol Version 1.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sfn.cn/news/technology/detail/212.html?navId=22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;干货分享 | 浅析SSL证书的工作原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://info.support.huawei.com/info-finder/encyclopedia/zh/SSH.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;什么是SSH？SSH是如何工作的？ - 华为&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SSH原理与运用（一）：远程登录 - 阮一峰的网络日志&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Sonarqube安装配置及基本使用</title>
      <link>/post/sonarqube-startup/</link>
      <pubDate>Wed, 07 Jun 2023 21:33:24 +0800</pubDate>
      <guid>/post/sonarqube-startup/</guid>
      <description>&lt;h2 id=&#34;环境安装配置&#34;&gt;环境安装配置&lt;/h2&gt;
&lt;h3 id=&#34;本地配置环境&#34;&gt;本地配置环境&lt;/h3&gt;
&lt;p&gt;按照官网文档入门教程，Sonarqube服务需要Java17环境，否则无法启动服务，报错如下。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/sonarqube-startup/images/start_sonar_err1_hu2e5e788543a84268b5716abdf1ff6b24_34173_7d8963b254e6285f896f25e06d7d1443.webp 400w,
               /post/sonarqube-startup/images/start_sonar_err1_hu2e5e788543a84268b5716abdf1ff6b24_34173_e422bab062054c951fceb0e66e0093ee.webp 760w,
               /post/sonarqube-startup/images/start_sonar_err1_hu2e5e788543a84268b5716abdf1ff6b24_34173_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/sonarqube-startup/images/start_sonar_err1_hu2e5e788543a84268b5716abdf1ff6b24_34173_7d8963b254e6285f896f25e06d7d1443.webp&#34;
               width=&#34;760&#34;
               height=&#34;97&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下载安装Java17，Java下载地址： &lt;a href=&#34;https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java Archive Downloads - Java SE 17&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置环境变量JAVA_HOME, CLASSPATH&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尝试启动 sonarqube服务，依然报如上错误，需要设置java虚拟机内存（设置为512M）后方解决上述错误。&lt;/p&gt;
&lt;p&gt;但启动时报新错误（与elasticsearch有关 ）：&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/sonarqube-startup/images/start_sonar_err2_hub05f51761b7ac6de4baed7029c1d9f55_206988_a15c8ada50544d4de19f32ef7d415861.webp 400w,
               /post/sonarqube-startup/images/start_sonar_err2_hub05f51761b7ac6de4baed7029c1d9f55_206988_a5958f9792a9295a216591c6fd6a8490.webp 760w,
               /post/sonarqube-startup/images/start_sonar_err2_hub05f51761b7ac6de4baed7029c1d9f55_206988_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/sonarqube-startup/images/start_sonar_err2_hub05f51761b7ac6de4baed7029c1d9f55_206988_a15c8ada50544d4de19f32ef7d415861.webp&#34;
               width=&#34;760&#34;
               height=&#34;169&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

由于&lt;a href=&#34;https://docs.sonarqube.org/latest/requirements/prerequisites-and-overview/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sonarqube官方文档&lt;/a&gt;未明确说明需要配置elasticsearch，因此不考虑配置。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;基于docker推荐&#34;&gt;基于Docker（推荐）&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下载安装&lt;a href=&#34;https://www.docker.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker&lt;/a&gt;
安装完毕后需要重启 Windows&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启动容器镜像
若无，则会自动拉取镜像，拉取完毕后自动启动容器&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run -d --name sonarqube -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true -p 9000:9000 sonarqube:latest
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/sonarqube-startup/images/docker_sonarqube_hud2f811ccf65d7349f22f4b4ac808d1d1_75104_25401125eb92a153808b45a3c63ea837.webp 400w,
               /post/sonarqube-startup/images/docker_sonarqube_hud2f811ccf65d7349f22f4b4ac808d1d1_75104_9e0dac9ffbf7dd54af3d3b6e2d4d19c3.webp 760w,
               /post/sonarqube-startup/images/docker_sonarqube_hud2f811ccf65d7349f22f4b4ac808d1d1_75104_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/sonarqube-startup/images/docker_sonarqube_hud2f811ccf65d7349f22f4b4ac808d1d1_75104_25401125eb92a153808b45a3c63ea837.webp&#34;
               width=&#34;760&#34;
               height=&#34;172&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;      容器启动成功后可通过浏览器访问localhost:9000访问sonarqube服务,默认用户名和密码均为admin&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/sonarqube-startup/images/docker_sonar_hu7ad4ac9c38a7bbe57056fe49a5b406e7_76525_d82551919e7ad412a7f91e35a5e256bf.webp 400w,
               /post/sonarqube-startup/images/docker_sonar_hu7ad4ac9c38a7bbe57056fe49a5b406e7_76525_d44a353a357545b35336dc6b4bc185ed.webp 760w,
               /post/sonarqube-startup/images/docker_sonar_hu7ad4ac9c38a7bbe57056fe49a5b406e7_76525_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/sonarqube-startup/images/docker_sonar_hu7ad4ac9c38a7bbe57056fe49a5b406e7_76525_d82551919e7ad412a7f91e35a5e256bf.webp&#34;
               width=&#34;760&#34;
               height=&#34;462&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;基本使用&#34;&gt;基本使用&lt;/h3&gt;
&lt;p&gt;基本步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;登录SonarQube，使用初始密码登录后更改密码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建新项目&lt;/p&gt;
&lt;p&gt;新项目可以通过各种流行DevOps平台（Azure、Butbucket Server、Github、Gitlab等）导入 ，也可以手动导入。
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/sonarqube-startup/images/create_project_hu2d1168a843b8037ae2832c450296a27d_147845_884b1070c2338ef3d0e2bd55ec880d89.webp 400w,
               /post/sonarqube-startup/images/create_project_hu2d1168a843b8037ae2832c450296a27d_147845_0a6dab3fd5bf340f95bffa0f60162bee.webp 760w,
               /post/sonarqube-startup/images/create_project_hu2d1168a843b8037ae2832c450296a27d_147845_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/sonarqube-startup/images/create_project_hu2d1168a843b8037ae2832c450296a27d_147845_884b1070c2338ef3d0e2bd55ec880d89.webp&#34;
               width=&#34;760&#34;
               height=&#34;423&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分析项目&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/sonarqube-startup/images/analyze_project_hue11260f07803d5f2c39487e7bab96aea_131929_7d62f8f8f004cd05eea22706ae53253a.webp 400w,
               /post/sonarqube-startup/images/analyze_project_hue11260f07803d5f2c39487e7bab96aea_131929_0d5825d4aa0e22a1ee2471766124653e.webp 760w,
               /post/sonarqube-startup/images/analyze_project_hue11260f07803d5f2c39487e7bab96aea_131929_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/sonarqube-startup/images/analyze_project_hue11260f07803d5f2c39487e7bab96aea_131929_7d62f8f8f004cd05eea22706ae53253a.webp&#34;
               width=&#34;760&#34;
               height=&#34;381&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看报告&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/sonarqube-startup/images/sonar_check_code_hu121500145ae1c3637000c34c40a29e60_144149_8a46fc2db9f4851285b2336a1556294d.webp 400w,
               /post/sonarqube-startup/images/sonar_check_code_hu121500145ae1c3637000c34c40a29e60_144149_da961d2b1202a92d227b9da8eaee2c23.webp 760w,
               /post/sonarqube-startup/images/sonar_check_code_hu121500145ae1c3637000c34c40a29e60_144149_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/sonarqube-startup/images/sonar_check_code_hu121500145ae1c3637000c34c40a29e60_144149_8a46fc2db9f4851285b2336a1556294d.webp&#34;
               width=&#34;760&#34;
               height=&#34;395&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改代码、项目迭代&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;分析项目&#34;&gt;分析项目&lt;/h3&gt;
&lt;h4 id=&#34;一些术语&#34;&gt;一些术语&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Technical debt：技术负债/技术债务&lt;/p&gt;
&lt;p&gt;根据维基百科的定义:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;技術負債（英語：Technical debt），又譯技術債，也稱為設計負債（design debt）、
程式碼負債（code debt），是程式設計及軟體工程中的一個比喻。指開發人員為了加速軟
件開發，在應該採用最佳方案時進行了妥協，改用了短期內能加速軟件開發的方案，從而在
未來給自己帶來的額外開發負擔。這種技術上的選擇，就像一筆債務一樣，雖然眼前看起來
可以得到好處，但必須在未來償還。軟體工程師必須付出額外的時間和精力持續修復之前的
妥協所造成的問題及副作用，或是進行重構，把架構改善為最佳實作方式。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;常见技术负债原因：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;不充足的事前定义
商务压力
缺少流程或理解
紧耦合组件
缺少测试套件
缺少文档 
缺乏合作
拖延重构
缺少知识
技术领导力差
...
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code Smell：代码异味/代码坏味道&lt;/p&gt;
&lt;p&gt;根据维基百科的定义：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;程式開發領域，代碼中的任何可能導致深層次問題的症狀都可以叫做代碼異味。 通常，在對
代碼做簡短的回饋迭代時，代碼異味會暴露出一些深層次的問題，這裡的回饋迭代，是指以
一種小範圍的、可控的方式重構代碼。基於這些暴露的問題，人們會進一步的檢查設計和代碼
中是否還存在別的代碼異味，然後再做進一步的重構。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;常见代码异味：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;代码重复
长方法
巨类
参数过多
特性依赖
人为的复杂
......
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vulnerability， 脆弱性/漏洞； HotSpot，热点&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;热点和漏洞的主要区别在于，在是否修改程序之前是否需要进行审查。

热点会突出显示对安全敏感的代码片段，但可能不会影响整个应用程序的安全性，只是对可能存在
的风险提出警示。是否有害安全性取决于开发人员对代码进行审查后的决定，确保不影响程序
安全性的情况下可以不修改代码。

漏洞意味着发现了影响应用程序安全性的问题，需要立即修复。
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;质量指标及合格基准&#34;&gt;质量指标及合格基准&lt;/h4&gt;
&lt;p&gt;SonarQube主要针对以下维度对代码进行评价，每一个维度都有细分的评价子维度（与指定 的规则库相关）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;可靠性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安全性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安全热点回顾&lt;/p&gt;
&lt;p&gt;突出需要检查的安全敏感代码段&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可维护性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试覆盖率&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重复行数
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/sonarqube-startup/images/condition_on_new_code_huc5890b0f8d8837e1ccc915c00111c57f_52830_d86723e1fd6cc6bf3d2475139d339090.webp 400w,
               /post/sonarqube-startup/images/condition_on_new_code_huc5890b0f8d8837e1ccc915c00111c57f_52830_d334c70b981217c2cc76e7d520afab4d.webp 760w,
               /post/sonarqube-startup/images/condition_on_new_code_huc5890b0f8d8837e1ccc915c00111c57f_52830_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/sonarqube-startup/images/condition_on_new_code_huc5890b0f8d8837e1ccc915c00111c57f_52830_d86723e1fd6cc6bf3d2475139d339090.webp&#34;
               width=&#34;760&#34;
               height=&#34;274&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;分析步骤&#34;&gt;分析步骤&lt;/h4&gt;
&lt;h5 id=&#34;1-下载扫描工具sonarscannerhttpsdocssonarqubeorg100analyzing-source-codescannerssonarscanner&#34;&gt;1. 下载扫描工具&lt;a href=&#34;https://docs.sonarqube.org/10.0/analyzing-source-code/scanners/sonarscanner/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SonarScanner&lt;/a&gt;&lt;/h5&gt;
&lt;h5 id=&#34;2-在项目目录中执行代码扫描脚本&#34;&gt;2. 在项目目录中执行代码扫描脚本&lt;/h5&gt;
&lt;p&gt;示例命令如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\Users\Administrator\Downloads\sonar-scanner-cli-4.8.0.2856-windows\sonar-scanner-4.8.0.2856-windows\bin\sonar-scanner.bat -D&amp;#34;sonar.projectKey=RSDataGet&amp;#34; -D&amp;#34;sonar.sources=.&amp;#34; -D&amp;#34;sonar.host.url=http://localhost:9000&amp;#34; -D&amp;#34;sonar.token=sqp_0709400c95442657a158cfbe9104c7213b4007e6&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;3-查看分析报告&#34;&gt;3. 查看分析报告&lt;/h5&gt;
&lt;p&gt;SonarQube通过统计数据和可视化图表展示代码审计结果。
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/sonarqube-startup/images/project_overview1_hu587b1a73eeeb6962b7df4ef82d1231e7_86648_860580d85ea925f54c998b7939c2bc64.webp 400w,
               /post/sonarqube-startup/images/project_overview1_hu587b1a73eeeb6962b7df4ef82d1231e7_86648_40611aea2dcf3f29697ba083bdd3e232.webp 760w,
               /post/sonarqube-startup/images/project_overview1_hu587b1a73eeeb6962b7df4ef82d1231e7_86648_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/sonarqube-startup/images/project_overview1_hu587b1a73eeeb6962b7df4ef82d1231e7_86648_860580d85ea925f54c998b7939c2bc64.webp&#34;
               width=&#34;760&#34;
               height=&#34;286&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/sonarqube-startup/images/stats_code_huf4d3e92e44075367d73b0ac87a132069_41623_7dc3a6195d4b9790fe23b4137ff9b32c.webp 400w,
               /post/sonarqube-startup/images/stats_code_huf4d3e92e44075367d73b0ac87a132069_41623_742250272be1795408bd739cdd87525d.webp 760w,
               /post/sonarqube-startup/images/stats_code_huf4d3e92e44075367d73b0ac87a132069_41623_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/sonarqube-startup/images/stats_code_huf4d3e92e44075367d73b0ac87a132069_41623_7dc3a6195d4b9790fe23b4137ff9b32c.webp&#34;
               width=&#34;760&#34;
               height=&#34;474&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/sonarqube-startup/images/project_overview_hu1f2e85ff62004213a7407078cae4d65d_119225_6023001be8045f798db6f80beba63b0c.webp 400w,
               /post/sonarqube-startup/images/project_overview_hu1f2e85ff62004213a7407078cae4d65d_119225_4a5b60fdab0c45e2dddc5f1aef36042c.webp 760w,
               /post/sonarqube-startup/images/project_overview_hu1f2e85ff62004213a7407078cae4d65d_119225_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/sonarqube-startup/images/project_overview_hu1f2e85ff62004213a7407078cae4d65d_119225_6023001be8045f798db6f80beba63b0c.webp&#34;
               width=&#34;760&#34;
               height=&#34;317&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h5 id=&#34;4-解决问题&#34;&gt;4. 解决问题&lt;/h5&gt;
&lt;h6 id=&#34;审查安全热点&#34;&gt;审查安全热点&lt;/h6&gt;
&lt;p&gt;如果确认代码无安全性问题，更改代码状态为“Safe”
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/sonarqube-startup/images/review_safe_hu8b7093694bafd26526ecdd5503db7564_82764_aced02160ea1120e41032b03b3c7fcb8.webp 400w,
               /post/sonarqube-startup/images/review_safe_hu8b7093694bafd26526ecdd5503db7564_82764_35b144f9b4d13863088f05440bd4d8b8.webp 760w,
               /post/sonarqube-startup/images/review_safe_hu8b7093694bafd26526ecdd5503db7564_82764_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/sonarqube-startup/images/review_safe_hu8b7093694bafd26526ecdd5503db7564_82764_aced02160ea1120e41032b03b3c7fcb8.webp&#34;
               width=&#34;760&#34;
               height=&#34;663&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h6 id=&#34;代码测试覆盖率提高&#34;&gt;代码测试覆盖率提高&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用测试覆盖率工具生成测试报告文档，如使用&lt;a href=&#34;https://coverage.readthedocs.io/en/latest/cmd.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;coverage&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;coverage run &amp;lt;program&amp;gt; args
coverage xml -o coverage.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在项目根目录的sonar-project.properties文件指定测试报告文档地址（详情参考文档&lt;a href=&#34;https://docs.sonarqube.org/latest/analyzing-source-code/test-coverage/python-test-coverage/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Python-test-coverage&lt;/a&gt;）&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sonar.projectKey=&amp;lt;sonar-project-key&amp;gt;
...
sonar.python.coverage.reportPaths=coverage.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用SonarQube执行代码审查
可以看到，代码覆盖率信息也被纳入到测试报告中
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/sonarqube-startup/images/coverage_hucd3fb14b800935da89630fdc4d8b419c_53744_a7f45c6aa448a35780779dd57b326af8.webp 400w,
               /post/sonarqube-startup/images/coverage_hucd3fb14b800935da89630fdc4d8b419c_53744_d80ea9b5a9ff721b6fde9cfe9b7c808a.webp 760w,
               /post/sonarqube-startup/images/coverage_hucd3fb14b800935da89630fdc4d8b419c_53744_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;/post/sonarqube-startup/images/coverage_hucd3fb14b800935da89630fdc4d8b419c_53744_a7f45c6aa448a35780779dd57b326af8.webp&#34;
               width=&#34;760&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;参考资料&#34;&gt;参考资料&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.sonarqube.org/latest/user-guide/concepts/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SonarQube User-Guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[Coverage &amp;amp; Test Data](Generate Reports for Apex, C/C++, Objective-C, Go, JS/TS and Python](&lt;a href=&#34;https://community.sonarsource.com/t/coverage-test-data-generate-reports-for-apex-c-c-objective-c-go-js-ts-and-python/9687&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://community.sonarsource.com/t/coverage-test-data-generate-reports-for-apex-c-c-objective-c-go-js-ts-and-python/9687&lt;/a&gt;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>《Python软件架构》知识点练习代码</title>
      <link>/project/python-software-architecture-practice/</link>
      <pubDate>Sat, 20 May 2023 23:49:19 +0800</pubDate>
      <guid>/project/python-software-architecture-practice/</guid>
      <description>&lt;p&gt;Python软件架构知识点练习代码&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python Core Programming Startup &amp;&amp; ChatGPT based Python Learning</title>
      <link>/post/python-core-programming-reading-note-1/</link>
      <pubDate>Wed, 08 Mar 2023 20:07:18 +0800</pubDate>
      <guid>/post/python-core-programming-reading-note-1/</guid>
      <description>&lt;h2 id=&#34;前言几个问题&#34;&gt;前言——几个问题&lt;/h2&gt;
&lt;p&gt;翻看书之前，首先想到几个问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;对于Python语言来说，初级、中级、高级水平的分界线是什么？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;国内什么水平的Python工程师在市面上应得薪资的下限约是多少？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;能否基于最基本的Python知识写出一些能在以后对于大多数业务都通用的模块？提高未来的工作效率？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于第一个问题，通过谷歌可以搜寻到一些观点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.51cto.com/dev?utm_source=feed&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;初级、中级和高级开发人员之间有什么区别?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/question/57776059&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;高级的python 后端程序员， 应该掌握哪些技能点 ？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;……&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;向ChatGPT提问，可以得到回答:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;初级Python开发人员通常掌握基本的Python语法、数据类型、流程控制和函数等基础知识，
能够编写简单的Python程序和解决简单的问题。他们还需要学会如何使用Python标准库和
第三方库来提高编程效率，例如处理文件、网络编程、图像处理等。

中级Python开发人员在掌握了初级Python开发技能的基础上，还需要深入了解Python的面
向对象编程、异常处理、多线程编程、生成器和迭代器、装饰器等高级特性。他们通常能够独
立完成中等难度的软件开发任务，并有能力设计和维护较为复杂的Python项目。

高级Python开发人员在掌握了初级和中级Python开发技能的基础上，还需要深入了解Python
的高级应用，例如机器学习、数据科学、Web开发等领域。他们通常具备深度的Python编程知识
和专业的领域知识，并能够应对大规模、复杂的Python项目的开发和维护。

总体来说，初级、中级、高级Python开发人员之间的区别在于对Python语言的熟练程度、掌握
的技术广度和深度、解决问题的能力等方面有所不同。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;对于第二个问题，如果向ChatGPT询问，其回答总结如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高级Python工程师薪资&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;高级Python工程师是一种高技能、高需求的职业，在不同的地区、公司和行业，高级Python工程师的薪资水平也会有所不同。以下是一些参考数据：

一线城市高级Python工程师平均薪资：约为每月20,000元至40,000元左右。
二线城市高级Python工程师平均薪资：约为每月15,000元至30,000元左右。
三线城市高级Python工程师平均薪资：约为每月10,000元至20,000元左右。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;中级Python工程师薪资&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;中级Python工程师是一种经验丰富、技能较为成熟的职业，在不同的地区、公司和行业，中级Python工程师的薪资水平也会有所不同。以下是一些参考数据：

一线城市中级Python工程师平均薪资：约为每月12,000元至20,000元左右。
二线城市中级Python工程师平均薪资：约为每月9,000元至16,000元左右。
三线城市中级Python工程师平均薪资：约为每月6,000元至12,000元左右。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;初级Python工程师&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;初级Python工程师通常指对Python语言基础知识掌握较好、能够完成一些简单的项目开发、测试和维护等工作的新手。在不同的地区、公司和行业，初级Python工程师的薪资水平也会有所不同。以下是一些参考数据：

一线城市初级Python工程师平均薪资：约为每月7,000元至12,000元左右。
二线城市初级Python工程师平均薪资：约为每月5,000元至9,000元左右。
三线城市初级Python工程师平均薪资：约为每月3,000元至6,000元左右
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;国外Python开发工程师的薪资水平可参考博客:&lt;a href=&#34;https://bluelight.co/blog/the-complete-python-developer-salary-guide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Complete Python Developer Salary Guide for 2023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对于第三个问题，首先Python中附带的内置库便是一层基于最基本Python知识封装；对于众多纷繁的业务需求，自然也可以通过对内置库进行封装从而更方便实现业务需求，提高开发效率。&lt;/p&gt;
&lt;h3 id=&#34;chatgpt对于python开发的建议&#34;&gt;ChatGPT对于Python开发的建议&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;能否基于最基本的Python知识写出一些能在以后对于大多数业务都通用的模块？&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;是的，基本的Python知识是写出通用的模块的基础，以下是一些常用的Python模块示例：

1. logging模块：用于记录应用程序的日志信息，可以帮助开发者进行错误调试和性能优化。

2. configparser模块：用于读取和写入配置文件，通常用于存储应用程序的配置信息。

3. argparse模块：用于解析命令行参数，可以帮助开发者编写命令行应用程序。

4. requests模块：用于向网络中的Web服务器发起HTTP请求，通常用于实现爬虫和网络数据交互功能。

5. json模块：用于处理JSON格式的数据，通常用于Web应用程序中的数据交换和数据持久化等场景。

6. datetime模块：用于处理日期和时间，可以帮助开发者进行日期和时间的格式化、计算和比较等操作。

7. os模块：用于访问操作系统的文件系统和系统调用接口，可以帮助开发者进行文件和目录操作等。

8. threading模块：用于创建和管理线程，通常用于实现并发编程和多任务处理。


以上是一些常用的Python模块示例，它们都是可以基于最基本的Python知识进行开发和使用的，同时也是在大多数业务场景中通用的模块。当然，除了以上这些模块外，还有很多其他的Python模块也是非常常用的，具体使用哪些模块还需要根据具体的业务需求进行选择。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;能否给更详细的建议?&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;当我们要写一些通用的Python模块时，可以从以下几个方面考虑：

1. 学会使用Python内置库：Python内置库是Python语言提供的一些标准库，包含了很多通用的模块和函数，比如os、sys、time、datetime等等，学会使用这些库可以帮助我们快速编写出更加优美、高效的Python代码。

2. 学会使用第三方库：Python社区中有很多开源的第三方库，可以帮助我们完成很多常见的任务，比如requests、beautifulsoup4、numpy、pandas等等。在编写通用的Python模块时，可以先了解一下这些库的功能和使用方法，以便在需要时可以快速调用。

3. 学会编写函数和类：在Python中，函数和类是最基本的代码结构，也是实现代码复用的重要手段。编写函数和类时，可以先将一些常见的代码逻辑封装成函数或类方法，以便在后续开发中可以快速复用。

4. 学会编写文档和测试用例：在编写通用的Python模块时，除了代码本身，还需要编写文档和测试用例，以便其他开发人员可以方便地使用和理解我们的代码。文档可以包括模块说明、函数说明、参数说明等等，测试用例可以覆盖代码的各个分支和边界情况，以确保代码的质量和稳定性。


总之，编写通用的Python模块需要我们不断学习和实践，不断完善自己的编码能力和代码品质，才能写出更加高效、优美、可靠的Python代码。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;能否给更详细的建议?&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;当我们想要写一些通用的Python模块时，可以从以下几个方面进行深入的考虑和实践：

1. 熟练掌握Python语言：写出高质量的Python模块首先要求我们对Python语言有深入的理解和熟练的掌握。我们可以阅读官方文档和相关书籍，参加在线课程和编程实践，积累丰富的编码经验。

2. 关注业务需求和用户体验：编写通用的Python模块必须要围绕业务需求和用户体验，即让我们的代码能够满足广大开发者的需求，提高开发效率和代码质量。我们可以深入了解业务需求，分析用户痛点，考虑解决方案，从而实现更加实用、高效、易用的Python模块。

3. 了解领域知识和技术发展趋势：编写通用的Python模块还需要关注领域知识和技术发展趋势，及时了解新技术、新方法和新框架，以便快速跟进市场需求，保持代码的竞争力和领先性。

4. 拥有良好的编码习惯和团队合作能力：写出高质量的Python模块还需要具备良好的编码习惯和团队合作能力，比如规范的命名、注释、代码风格，清晰的代码逻辑、模块划分和接口设计，以及高效的沟通、协作和问题解决能力。

5. 持续优化和改进：编写通用的Python模块不是一次性的事情，我们需要不断持续优化和改进，以适应市场需求和用户反馈。我们可以通过代码审查、单元测试、性能测试等手段，对代码进行优化和改进，从而不断提升代码的质量和性能。


总之，编写通用的Python模块需要我们拥有深厚的编程技能、领域知识和团队协作能力，同时也需要我们持续关注市场需求和技术趋势，保持创新和进取的精神。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;能否给更加详细的建议?&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;当我们想要编写通用的Python模块时，除了前面提到的几个方面之外，还可以考虑以下建议：

1. 设计良好的API接口：编写通用的Python模块需要从API接口的设计开始。我们需要保证API接口的易用性、稳定性和兼容性，同时也需要充分考虑扩展性和可定制化。良好的API接口设计能够提高代码的可复用性和可维护性，降低开发成本和风险。

2. 重视代码的可读性和可维护性：编写通用的Python模块需要关注代码的可读性和可维护性，即使在未来代码被修改、维护和扩展的情况下也能够保持高质量的代码结构。我们可以采用清晰的代码命名、注释和文档，结构化的代码组织和模块化设计，以及良好的代码风格和规范，从而提高代码的可读性和可维护性。

3. 使用常用的工具和框架：编写通用的Python模块需要使用常用的工具和框架，比如虚拟环境、版本控制、自动化测试、持续集成等。这些工具和框架能够提高我们的编码效率和代码质量，减少错误和重复工作，保证代码的稳定性和可靠性。

4. 编写高质量的文档和示例代码：编写通用的Python模块需要编写高质量的文档和示例代码，以便其他开发者能够理解和使用我们的模块。我们可以编写详细的API文档、用户手册和技术文档，同时也需要编写简单易懂、可运行的示例代码，帮助其他开发者快速上手使用我们的模块。

5. 参与社区和开源项目：编写通用的Python模块需要积极参与社区和开源项目，了解行业动态和技术趋势，扩展我们的技术视野和知识面。同时也可以贡献我们的代码和经验，获得更多反馈和支持，提升我们的技术能力和职业发展。


总之，编写通用的Python模块需要我们具备深厚的编程技能、领域知识和团队协作能力，同时也需要不断优化和改进我们的代码、文档和示例，以适应市场需求和用户反馈。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;能否再详细一点？&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;当我们想要编写通用的Python模块时，需要考虑以下方面：

1. 模块的可重用性：编写通用的Python模块需要重视模块的可重用性，即模块能够适用于不同的场景和需求。我们可以考虑将模块设计为可配置的，使用参数、选项和默认值等方式，以适应不同的需求和场景。另外，我们还可以将模块划分为独立的功能单元，使其能够更容易地被其他开发者使用和扩展。

2. 模块的可扩展性：编写通用的Python模块需要重视模块的可扩展性，即模块能够容易地被修改、扩展和定制化。我们可以采用面向对象编程和设计模式等技术，以实现模块的高内聚和低耦合，使其能够更容易地被扩展和修改。

3. 模块的可移植性：编写通用的Python模块需要重视模块的可移植性，即模块能够在不同的操作系统、平台和环境中运行。我们可以使用标准的Python库和跨平台的工具和框架，以保证模块的可移植性。

4. 模块的性能和效率：编写通用的Python模块需要重视模块的性能和效率，以保证其能够高效地运行。我们可以采用算法优化、缓存机制、并发编程等技术，以提高模块的性能和效率。

5. 模块的安全性和可靠性：编写通用的Python模块需要重视模块的安全性和可靠性，以保证其能够安全地运行。我们可以采用数据验证、异常处理、日志记录等技术，以提高模块的安全性和可靠性。

6. 模块的易用性和可维护性：编写通用的Python模块需要重视模块的易用性和可维护性，以保证其能够被其他开发者易于理解和维护。我们可以采用清晰的代码命名、注释和文档，结构化的代码组织和模块化设计，以及良好的代码风格和规范，从而提高模块的易用性和可维护性。


综上所述，编写通用的Python模块需要我们全面考虑模块的可重用性、可扩展性、可移植性、性能和效率、安全性和可靠性、易用性和可维护性等方面。这需要我们具备全面的编程技能
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;请给出你能给出的最详细的建议&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;当你准备写出一些能够在大多数业务中通用的Python模块时，以下是一些具体的建议：

熟悉常用库和工具：熟练掌握Python常用的库和工具，如NumPy、Pandas、Matplotlib、Scikit-learn等，这些库可以帮助你快速地完成数据分析、机器学习、图像处理等任务。
掌握Python基础语法：熟练掌握Python基础语法是编写高效Python代码的基础。掌握Python的变量、数据类型、控制流、函数、面向对象编程等基本概念。
遵循Python的最佳实践：了解Python的最佳实践，例如PEP 8规范，可以使你的代码更具可读性和可维护性。
编写可测试的代码：编写可测试的代码是一个好习惯。为了测试代码，你需要编写单元测试和集成测试。这将确保你的代码是高质量的，并且更容易维护。
熟悉常用设计模式：设计模式是编写高效、可维护、可扩展代码的重要手段。在编写Python代码时，熟悉常用的设计模式，例如单例模式、工厂模式、观察者模式等，可以提高你的编程水平。
避免重复代码：重复代码不仅浪费时间，还会导致代码难以维护。当你编写Python代码时，尽可能地避免编写重复的代码。可以将常用的功能封装为函数或类，以便重用。
简化代码结构：使代码结构清晰，易于阅读和维护。尽可能避免使用嵌套的条件语句或循环，使用函数或类进行重构，可以简化代码结构并提高可读性。
总之，写出能够在大多数业务中通用的Python模块需要的是不断练习和总结，需要对Python的基础语法、常用库和工具、最佳实践、设计模式等方面有深入的了解，并不断地优化代码结构和提高代码质量。
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;书籍&#34;&gt;书籍&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python核心编程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python高级编程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;软件架构 Python语言实现&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;书签&#34;&gt;书签&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.tiobe.com/tiobe-index/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TIOBE Index&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://devguide.python.org/#python-developer-s-guide&#34; title=&#34;Permalink to this heading&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Python Developer’s Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.blog.pythonlibrary.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MouseOfPython&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
